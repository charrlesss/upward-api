{"version":3,"file":"static/js/6385.e77f5a7e.chunk.js","mappings":"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","sources":["components/DataGridTable.tsx","components/ModalWithTable.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Bonds/BondsPolicy.tsx","feautures/Admin/Task/Production/Policies/component/BreadCrumbs.tsx","lib/localStorage.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, LinearProgress } from \"@mui/material\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridRowSelectionModel,\r\n  GridRowIdGetter,\r\n} from \"@mui/x-data-grid\";\r\nimport useUrlParams from \"../hooks/useUrlParams\";\r\n\r\ninterface DataGridTableParams {\r\n  onSelectionChange: (rowSelected: GridRowSelectionModel, data: any) => void;\r\n  columns: GridColDef[];\r\n  initialPage?: number;\r\n  rowHeight?: number;\r\n  queryKey: Array<string>;\r\n  dataKey?: string;\r\n  getRowId: GridRowIdGetter<any> | undefined;\r\n  rows: GridRowSelectionModel;\r\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\r\n  isLoading: boolean;\r\n  mutipleSelect: boolean;\r\n  height?: string;\r\n}\r\n\r\nexport default function DataGridTable({\r\n  onSelectionChange,\r\n  initialPage = 10,\r\n  columns,\r\n  rowHeight = 35,\r\n  getRowId,\r\n  rows,\r\n  isLoading,\r\n  mutipleSelect,\r\n  height = \"500px\",\r\n}: DataGridTableParams) {\r\n  const { searchParams, setSearchParams } = useUrlParams();\r\n  const [rowSelectionModel, setRowSelectionModel] =\r\n    useState<GridRowSelectionModel>([]);\r\n  const [doubleClick, setDoubleClick] = useState(false);\r\n  const [paginationModel, setPaginationModel] = React.useState({\r\n    pageSize: parseInt(searchParams.get(\"pageSize\") as string) || 100,\r\n    page: parseInt(searchParams.get(\"page\") as string) || 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setRowSelectionModel(\r\n      (searchParams.get(\"selected\") as string) === \"\"\r\n        ? []\r\n        : [searchParams.get(\"selected\") as string]\r\n    );\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    onSelectionChange(rowSelectionModel, rows);\r\n  }, [doubleClick]);\r\n\r\n  if (isLoading) {\r\n    const updateColumns: any = columns.map((column) => {\r\n      if (column.field === \"id\") {\r\n        column = { ...column, colSpan: 4, align: \"center\" };\r\n      }\r\n      return column;\r\n    });\r\n    return (\r\n      <Box\r\n        sx={{\r\n          height: 500,\r\n          width: \"100%\",\r\n          overflowX: \"scroll\",\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <DataGrid\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rows={[{ id: \"Loading...\" }]}\r\n          columns={updateColumns}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: height,\r\n        width: \"100%\",\r\n        overflowX: \"scroll\",\r\n        position: \"absolute\",\r\n      }}\r\n    >\r\n      <button\r\n        id=\"reset-data-grid-selection\"\r\n        style={{ display: \"none\" }}\r\n        onClick={() => {\r\n          setRowSelectionModel([]);\r\n        }}\r\n      >\r\n        reset\r\n      </button>\r\n      {mutipleSelect ? (\r\n        <DataGrid\r\n          checkboxSelection\r\n          disableRowSelectionOnClick\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rowHeight={rowHeight}\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: initialPage },\r\n            },\r\n          }}\r\n          pageSizeOptions={[initialPage, 25, 50, 100]}\r\n          getRowId={getRowId}\r\n        />\r\n      ) : (\r\n        <DataGrid\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rowHeight={rowHeight}\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: initialPage },\r\n            },\r\n          }}\r\n          checkboxSelection\r\n          pageSizeOptions={[initialPage, 25, 50, 100]}\r\n          onRowDoubleClick={(params) => {\r\n            setDoubleClick((d) => !d);\r\n            setRowSelectionModel((data) => {\r\n              if (data.length > 0 && data[0] === params.id) {\r\n                return [];\r\n              }\r\n              return [params.id];\r\n            });\r\n          }}\r\n          onRowSelectionModelChange={(selection) => {\r\n            if (selection.length > 1) {\r\n              const selectionSet = new Set(rowSelectionModel);\r\n              const result = selection.filter((s) => !selectionSet.has(s));\r\n              onSelectionChange(result, rows);\r\n              setRowSelectionModel(result);\r\n            } else {\r\n              onSelectionChange(selection, rows);\r\n              setRowSelectionModel(selection);\r\n            }\r\n          }}\r\n          disableRowSelectionOnClick\r\n          rowSelectionModel={rowSelectionModel}\r\n          sx={{\r\n            \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer\":\r\n              {\r\n                display: \"none\",\r\n              },\r\n            \"& .MuiDataGrid-row\": {\r\n              cursor: \"pointer\",\r\n            },\r\n          }}\r\n          getRowId={getRowId}\r\n          paginationModel={paginationModel}\r\n          onPaginationModelChange={(model) => {\r\n            setPaginationModel(model);\r\n            setSearchParams((prev) => {\r\n              prev.set(\"page\", model.page.toString());\r\n              prev.set(\"pageSize\", model.pageSize.toString());\r\n              return prev;\r\n            });\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DataGridTable from \"./DataGridTable\";\r\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\r\nimport { Modal, Box, Typography,IconButton ,TextField } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\ninterface ModalWithTableParams {\r\n  height: number;\r\n  isLoading: boolean;\r\n  queryKey: string;\r\n  columns: Array<any>;\r\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\r\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\r\n  rows: GridRowSelectionModel;\r\n  id: string;\r\n  onCloseModal: () => void;\r\n  onClickCloseIcon: () => void;\r\n  showModal:boolean,\r\n  searchOnChange:React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined\r\n}\r\n\r\nconst style = {\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"70%\",\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n    heigth: \"auto\",\r\n  };\r\n  \r\nexport default function ModalWithTable({\r\n  height,\r\n  isLoading,\r\n  queryKey,\r\n  columns,\r\n  onSelectionChange,\r\n  setRows,\r\n  rows,\r\n  id,\r\n  onCloseModal,\r\n  showModal,\r\n  onClickCloseIcon,\r\n  searchOnChange\r\n}: ModalWithTableParams) {\r\n  return (\r\n    <Modal\r\n      open={showModal}\r\n      onClose={onCloseModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\r\n          <IconButton\r\n            aria-label=\"search-client\"\r\n            color=\"secondary\"\r\n            onClick={onClickCloseIcon}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\r\n          Search Clients\r\n        </Typography>\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Search\"\r\n          sx={{ marginBottom: \"10px\" }}\r\n          fullWidth\r\n          onChange={searchOnChange}\r\n        />\r\n\r\n        <div style={{ position: \"relative\", height: `${height + 20}px` }}>\r\n          <DataGridTable\r\n            height={`${height}px`}\r\n            mutipleSelect={false}\r\n            isLoading={isLoading}\r\n            queryKey={[queryKey]}\r\n            columns={columns}\r\n            onSelectionChange={onSelectionChange}\r\n            getRowId={(row) => row[`${id}`].toString()}\r\n            rows={rows}\r\n            setRows={setRows}\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useContext, useReducer, useState } from \"react\";\r\nimport BreadCrumbs from \"../../component/BreadCrumbs\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Box, Button, CircularProgress } from \"@mui/material\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { AuthContext } from \"../../../../../../../components/AuthContext\";\r\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport Swal from \"sweetalert2\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\r\nimport ContentPasteSearchIcon from \"@mui/icons-material/ContentPasteSearch\";\r\nimport ModalWithTable from \"../../../../../../../components/ModalWithTable\";\r\nimport storedLocalStorage from \"../../../../../../../lib/localStorage\";\r\n\r\nconst bondsPolicyComponents = [\r\n  {\r\n    link: \"/dashboard/task/production/policy/bonds\",\r\n    text: \"Policy Information\",\r\n  },\r\n  {\r\n    link: \"/dashboard/task/production/policy/bonds/policy-premium\",\r\n    text: \"Policy Premium\",\r\n  },\r\n];\r\n\r\nconst jsongStringInitialState = {\r\n  form_action: \"REG\",\r\n  form_type: \"COM\",\r\n  sub_account: \"HO\",\r\n  //insurer info\r\n  client_id: \"\",\r\n  client_name: \"\",\r\n  client_address: \"\",\r\n  //agent info\r\n  agent_id: \"\",\r\n  agent_name: \"\",\r\n  agent_com: \"0.00\",\r\n  //Vehicle policy\r\n  PolicyAccount: \"\",\r\n  PolicyNo: \"\",\r\n  policyType: \"G13\",\r\n  //Period Insurance\r\n  biddingDate: new Date(),\r\n  time: new Date(),\r\n  DateIssued: new Date(),\r\n  validity: \"\",\r\n\r\n  //\r\n  officer: \"\",\r\n  position: \"\",\r\n  unit: \"\",\r\n  obligee: \"\",\r\n  //\r\n  printType: \"Front Page\",\r\n  //\r\n  officerName: \"\",\r\n  officerTaxCertNo: \"\",\r\n  officerIssuedLoc: \"\",\r\n  officerDateIssued: new Date(),\r\n  //information\r\n  insuranceCapacity: \"\",\r\n  insuranceOfficerTaxCert: \"\",\r\n  insuranceIssuedLoc: \"\",\r\n  insuranceDateIssued: new Date(),\r\n\r\n  //calculation\r\n  insuredValue: \"0.00\",\r\n  percentagePremium: \"0.00\",\r\n  totalPremium: \"0.00\",\r\n  vat: \"0.00\",\r\n  docStamp: \"0.00\",\r\n  localGovTaxPercent: \"0.75\",\r\n  localGovTax: \"0.00\",\r\n  umis: \"0.00\",\r\n  principal: \"0.00\",\r\n  totalDue: \"0.00\",\r\n  // extra\r\n  bondActioMode: \"\",\r\n};\r\n\r\nconst storagePolicy_ = \"BPolicyInitialState\";\r\nconst reducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FIELD\":\r\n      const newState = {\r\n        ...state,\r\n        [action.field]: action.value,\r\n      };\r\n      localStorage.setItem(storagePolicy_, JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const BondContext = createContext<any>({});\r\n\r\nconst initialState = storedLocalStorage(\r\n  jsongStringInitialState,\r\n  storagePolicy_\r\n);\r\n\r\nconst queryKeySearchPolicy = \"bond-search\";\r\nconst queryKeySearchClientEntry = \"clients\";\r\nconst queryKeySearchAgentEntry = \"agents\";\r\nconst queryKeyNeedData = \"bond-policy\";\r\nconst queryKeyAddOrUpdatePolicy = \"bond-policy\";\r\nconst queryKeyDeletePolicy = \"bond-policy\";\r\n\r\nexport const vpolicyColumn = [\r\n  { field: \"DateIssued\", headerName: \"Date\", width: 200 },\r\n  { field: \"PolicyNo\", headerName: \"Policy No\", width: 250 },\r\n  {\r\n    field: \"Account\",\r\n    headerName: \"Account\",\r\n    width: 170,\r\n  },\r\n  {\r\n    field: \"client_fullname\",\r\n    headerName: \"Full Name\",\r\n    flex: 1,\r\n  },\r\n];\r\n\r\nconst vpolicyKey = \"vehicle-policy\";\r\n\r\nexport default function BondsPolicy() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  const [clientRows, setClientRows] = useState<GridRowSelectionModel>([]);\r\n  const [agentRows, setAgentRows] = useState<GridRowSelectionModel>([]);\r\n  const [search, setSearch] = useState<GridRowSelectionModel>([]);\r\n  const [searchShow, setSearchShow] = useState(false);\r\n  const [loadSearchingChange, setLoadSearchingChange] = useState(false);\r\n  const [Mortgagee, setMortgagee] = useState(false);\r\n\r\n  const [showField, setShowField] = useState({\r\n    thirdparty: state.form_type.toLowerCase() === \"tpl\",\r\n    compre: state.form_type.toLowerCase() === \"com\",\r\n  });\r\n\r\n  const queryClient = useQueryClient();\r\n  const isAddOrEditMode = state.bondActioMode === \"\";\r\n\r\n  const { isLoading: searchLoading } = useQuery({\r\n    queryKey: queryKeySearchPolicy,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-bonds-policy?searchBondsPolicy=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setSearch(response.bondsPolicy);\r\n    },\r\n  });\r\n\r\n  const { isLoading: clientLoading } = useQuery({\r\n    queryKey: queryKeySearchClientEntry,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-client-fire-policy?searchClient=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setClientRows(response.clients);\r\n    },\r\n  });\r\n\r\n  const { isLoading: agentLoading } = useQuery({\r\n    queryKey: queryKeySearchAgentEntry,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-agent-fire-policy?searchAgent=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setAgentRows(response.agents);\r\n    },\r\n  });\r\n\r\n  const { data, isLoading } = useQuery({\r\n    queryKey: queryKeyNeedData,\r\n    queryFn: async () =>\r\n      await myAxios.get(`/task/production/get-bonds-policy`, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }),\r\n    onSuccess: (res) => {\r\n      console.log(res);\r\n    },\r\n  });\r\n\r\n  const { mutate, isLoading: loadingAddNew } = useMutation({\r\n    mutationKey: queryKeyAddOrUpdatePolicy,\r\n    mutationFn: async (variables: any) => {\r\n      if (state.bondActioMode === \"delete\") {\r\n        return await myAxios.post(\r\n          \"/task/production/update-bonds-policy\",\r\n          variables,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      }\r\n      return await myAxios.post(\r\n        \"/task/production/add-bonds-policy\",\r\n        variables,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    onSuccess: async (res) => {\r\n      if (res.data.success) {\r\n        await updateQueryByKey();\r\n        return Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => {\r\n          if (state.bondActioMode !== \"delete\") {\r\n            backToDefaultState(jsongStringInitialState, true);\r\n          }\r\n        });\r\n      }\r\n\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: res.data.message,\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    },\r\n  });\r\n\r\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\r\n    mutationKey: queryKeyDeletePolicy,\r\n    mutationFn: async (variables: any) => {\r\n      return await myAxios.post(\r\n        \"/task/production/delete-bonds-policy\",\r\n        variables,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    onSuccess: async (res) => {\r\n      if (res.data.success) {\r\n        await updateQueryByKey();\r\n        return Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => {\r\n          backToDefaultState(jsongStringInitialState, true);\r\n        });\r\n      }\r\n\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: res.data.message,\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n\r\n  const customInputchange = (value: any, name: string) => {\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n\r\n  function handleOnSave() {\r\n    if (state.client_id === \"\" || state.client_id === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Invalid IDNo.\",\r\n        \"you missed the Client Id Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    if (state.PolicyAccount === \"\" || state.PolicyAccount === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Please select Account.\",\r\n        \"you missed the Account Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    if (state.PolicyNo === \"\" || state.PolicyNo === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Invalid Policy No.\",\r\n        \"you missed the Policy No Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, Save it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        console.log(state);\r\n        mutate(state);\r\n      }\r\n    });\r\n  }\r\n\r\n  function computation() {\r\n    const inpInsurerVal = parseFloat(state.insuredValue);\r\n    const inPercentagePremium = parseFloat(state.percentagePremium);\r\n    const inpLocalGovTaxPercent = parseFloat(state.localGovTaxPercent);\r\n\r\n    const umis = parseFloat(state.umis);\r\n\r\n    const principal = parseFloat(state.principal);\r\n\r\n    const Percentage = inPercentagePremium / 100;\r\n    const VatPercentage = 12 / 100;\r\n    const DocPercentage = 12.5 / 100;\r\n    const LOGPercentage = inpLocalGovTaxPercent / 100;\r\n    const NewTotalPremium = inpInsurerVal * Percentage;\r\n\r\n    customInputchange(inpInsurerVal.toFixed(2), \"insuredValue\");\r\n    customInputchange(inPercentagePremium.toFixed(2), \"percentagePremium\");\r\n    customInputchange(NewTotalPremium.toFixed(2), \"totalPremium\");\r\n    customInputchange((VatPercentage * NewTotalPremium).toFixed(2), \"vat\");\r\n    customInputchange((DocPercentage * NewTotalPremium).toFixed(2), \"docStamp\");\r\n    customInputchange(\r\n      (LOGPercentage * NewTotalPremium).toFixed(2),\r\n      \"localGovTax\"\r\n    );\r\n\r\n    customInputchange(umis.toFixed(2),'umis')\r\n    customInputchange(principal.toFixed(2),'principal')\r\n\r\n    customInputchange(\r\n      (\r\n        parseFloat(NewTotalPremium.toFixed(2)) +\r\n        parseFloat((VatPercentage * NewTotalPremium).toFixed(2)) +\r\n        parseFloat((DocPercentage * NewTotalPremium).toFixed(2)) +\r\n        parseFloat((LOGPercentage * NewTotalPremium).toFixed(2)) +\r\n        parseFloat(umis.toFixed(2)) +\r\n        parseFloat(principal.toFixed(2))\r\n      ).toFixed(2),\r\n      \"totalDue\"\r\n    );\r\n  }\r\n\r\n  function backToDefaultState(json: any, resetAll: boolean = false) {\r\n    json.form_type = state.form_type;\r\n    json.form_action = state.form_action;\r\n    json.prem_text_one = state.prem_text_one;\r\n    json.prem_text_two = state.prem_text_two;\r\n    if (!resetAll) {\r\n      json.bondActioMode = state.bondActioMode;\r\n    }\r\n    Object.entries(json).forEach(([key, value]) => {\r\n      customInputchange(value, key);\r\n    });\r\n  }\r\n\r\n  async function updateQueryByKey() {\r\n    return Promise.all([\r\n      queryClient.invalidateQueries(queryKeySearchPolicy),\r\n      queryClient.invalidateQueries(queryKeySearchClientEntry),\r\n      queryClient.invalidateQueries(queryKeySearchAgentEntry),\r\n      queryClient.invalidateQueries(queryKeyNeedData),\r\n      queryClient.invalidateQueries(queryKeyAddOrUpdatePolicy),\r\n      queryClient.invalidateQueries(queryKeyDeletePolicy),\r\n    ]);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <h1>Loading....</h1>;\r\n  }\r\n\r\n  return (\r\n    <BondContext.Provider\r\n      value={{\r\n        clientLoading,\r\n        agentLoading,\r\n        state,\r\n        handleInputChange,\r\n        customInputchange,\r\n        Mortgagee,\r\n        setMortgagee,\r\n        showField,\r\n        setShowField,\r\n        isLoading,\r\n        clientRows,\r\n        setClientRows,\r\n        myAxios,\r\n        user,\r\n        agentRows,\r\n        setAgentRows,\r\n        data,\r\n        computation,\r\n        isAddOrEditMode,\r\n      }}\r\n    >\r\n      <BreadCrumbs list={bondsPolicyComponents} />\r\n      <Box\r\n        sx={(theme) => ({\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          columnGap: \"20px\",\r\n          marginBottom: \"10px\",\r\n          [theme.breakpoints.down(\"sm\")]: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n            flex: 1,\r\n          },\r\n        })}\r\n      >\r\n        <div\r\n          style={{\r\n            marginTop: \"10px\",\r\n            marginBottom: \"12px\",\r\n            flex: 1,\r\n            width: \"100%\",\r\n          }}\r\n        ></div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            columnGap: \"20px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              columnGap: \"5px\",\r\n            }}\r\n          >\r\n            {state.bondActioMode === \"\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={() => {\r\n                  customInputchange(\"add\", \"bondActioMode\");\r\n                }}\r\n              >\r\n                New\r\n              </Button>\r\n            )}\r\n\r\n            <Box sx={{ position: \"relative\" }}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                onClick={handleOnSave}\r\n                disabled={loadingAddNew || state.bondActioMode === \"\"}\r\n                startIcon={<SaveIcon />}\r\n              >\r\n                Save\r\n              </Button>\r\n\r\n              {loadingAddNew && state.bondActioMode === 'add' && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  sx={{\r\n                    color: green[500],\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    marginTop: \"-12px\",\r\n                    marginLeft: \"-12px\",\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n            {state.bondActioMode !== \"\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<CloseIcon />}\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  Swal.fire({\r\n                    title: \"Are you sure?\",\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"Yes, cancel it!\",\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      customInputchange(\"\", \"bondActioMode\");\r\n                      backToDefaultState(jsongStringInitialState, true);\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            )}\r\n            <Box sx={{ position: \"relative\" }}>\r\n              <Button\r\n                id=\"save-entry-header\"\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: pink[500],\r\n                  \"&:hover\": {\r\n                    backgroundColor: pink[600],\r\n                  },\r\n                }}\r\n                disabled={state.bondActioMode !== \"delete\"}\r\n                startIcon={<DeleteIcon />}\r\n                onClick={() => {\r\n                  Swal.fire({\r\n                    title: \"Are you sure?\",\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"Yes, delete it!\",\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      mutateDelete({\r\n                        PolicyAccount: state.PolicyAccount,\r\n                        PolicyNo: state.PolicyNo,\r\n                        policyType:state.policyType\r\n                      });\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              {loadingDelete && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  sx={{\r\n                    color: green[500],\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    marginTop: \"-12px\",\r\n                    marginLeft: \"-12px\",\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n          </div>\r\n        </div>\r\n      </Box>\r\n      <div style={{ marginBottom: \"5px\", display: \"flex\", gap: \"10px\" }}>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          startIcon={<ContentPasteSearchIcon />}\r\n          onClick={() => {\r\n            if (state.bondActioMode === \"\" || state.bondActioMode === null) {\r\n              return setSearchShow(true);\r\n            }\r\n            Swal.fire({\r\n              title: \"Are you sure?\",\r\n              text: \"Your in Add mode, If you proceed the data you input will replace existing data. Are you sure you want to continue\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"Yes\",\r\n              cancelButtonText: \"No\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                customInputchange(\"\", \"bondActioMode\");\r\n                backToDefaultState(jsongStringInitialState, true);\r\n                setSearchShow(true);\r\n              }\r\n            });\r\n          }}\r\n          disabled={searchLoading || loadSearchingChange}\r\n        >\r\n          Search Policy\r\n        </Button>\r\n        <FormControl\r\n          size=\"small\"\r\n          sx={(theme) => ({\r\n            width: \"150px\",\r\n          })}\r\n        >\r\n          <InputLabel id=\"subAccount\">Sub Account</InputLabel>\r\n          <Select\r\n            size=\"small\"\r\n            labelId=\"subAccount\"\r\n            label=\"subAccount\"\r\n            name=\"sub_account\"\r\n            value={state.sub_account}\r\n            onChange={(e) => {\r\n              handleInputChange(e);\r\n            }}\r\n          >\r\n            {(data?.data?.bondsPolicy.sub_account).map(\r\n              (items: any, idx: number) => {\r\n                return (\r\n                  <MenuItem key={idx} value={items.Acronym.trim()}>\r\n                    {items.Acronym}\r\n                  </MenuItem>\r\n                );\r\n              }\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          size=\"small\"\r\n          sx={(theme) => ({\r\n            width: \"150px\",\r\n          })}\r\n        >\r\n          <InputLabel id=\"print-type\">Print Type</InputLabel>\r\n          <Select\r\n            size=\"small\"\r\n            labelId=\"print-type\"\r\n            label=\"Print Type\"\r\n            name=\"printType\"\r\n            value={state.printType}\r\n            onChange={handleInputChange}\r\n          >\r\n            {[{ title: \"Front Page\" }, { title: \"Back Page\" }].map(\r\n              (items: any, idx: number) => {\r\n                return (\r\n                  <MenuItem key={idx} value={items.title}>\r\n                    {items.title}\r\n                  </MenuItem>\r\n                );\r\n              }\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Outlet />\r\n      <ModalWithTable\r\n        showModal={searchShow}\r\n        onCloseModal={() => {\r\n          setSearchShow(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setSearchShow(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          setLoadSearchingChange(true);\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-bonds-policy?searchBondsPolicy=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setSearch(res?.data.bondsPolicy);\r\n              setLoadSearchingChange(false);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={searchLoading || loadSearchingChange}\r\n        queryKey={vpolicyKey}\r\n        columns={vpolicyColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.PolicyNo.toString());\r\n          });\r\n\r\n          if (selectedRowData.length <= 0) return;\r\n          const {\r\n            PolicyNo,\r\n            Account,\r\n            PolicyType,\r\n            Percentage,\r\n            BidDate,\r\n            BidTime,\r\n            Obligee,\r\n            UnitDetail,\r\n            BondValue,\r\n            NotaryName,\r\n            TaxCerNo,\r\n            IssuedLocation,\r\n            NIssued,\r\n            CapacityAs,\r\n            TaxCerNoCorp,\r\n            IssuedLoctCorp,\r\n            CIssued,\r\n            Officer,\r\n            OPosition,\r\n            Validity,\r\n            IDNo,\r\n            SubAcct,\r\n            DateIssued,\r\n            Notarial,\r\n            Misc,\r\n            AgentID,\r\n            AgentCom,\r\n            client_fullname,\r\n            agent_fullname,\r\n            address,\r\n          } = selectedRowData[0];\r\n          console.log(selectedRowData);\r\n          customInputchange(SubAcct, \"sub_account\");\r\n          customInputchange(IDNo, \"client_id\");\r\n          customInputchange(client_fullname, \"client_name\");\r\n          customInputchange(address, \"client_address\");\r\n\r\n          customInputchange(AgentID, \"agent_id\");\r\n          customInputchange(agent_fullname, \"agent_name\");\r\n          customInputchange(AgentCom, \"agent_com\");\r\n\r\n          customInputchange(Account, \"PolicyAccount\");\r\n          customInputchange(PolicyNo, \"PolicyNo\");\r\n          customInputchange(PolicyType, \"policyType\");\r\n\r\n          customInputchange(BidDate, \"biddingDate\");\r\n          customInputchange(BidTime, \"time\");\r\n          customInputchange(DateIssued, \"DateIssued\");\r\n          customInputchange(Validity, \"validity\");\r\n\r\n          customInputchange(Officer, \"officer\");\r\n          customInputchange(OPosition, \"position\");\r\n          customInputchange(UnitDetail, \"unit\");\r\n          customInputchange(Obligee, \"obligee\");\r\n\r\n          customInputchange(NotaryName, \"officerName\");\r\n          customInputchange(TaxCerNo, \"officerTaxCertNo\");\r\n          customInputchange(IssuedLocation, \"officerIssuedLoc\");\r\n          customInputchange(NIssued, \"officerDateIssued\");\r\n\r\n          customInputchange(CapacityAs, \"insuranceCapacity\");\r\n          customInputchange(TaxCerNoCorp, \"insuranceOfficerTaxCert\");\r\n          customInputchange(IssuedLoctCorp, \"insuranceIssuedLoc\");\r\n          customInputchange(CIssued, \"insuranceDateIssued\");\r\n\r\n          state.insuredValue = BondValue;\r\n          state.percentagePremium = Percentage;\r\n          state.umis = Notarial;\r\n          state.principal = Misc;\r\n          computation();\r\n\r\n          customInputchange(\"delete\", \"bondActioMode\");\r\n          setSearchShow(false);\r\n        }}\r\n        id=\"PolicyNo\"\r\n        rows={search}\r\n        setRows={setSearch}\r\n      />\r\n    </BondContext.Provider>\r\n  );\r\n}\r\n","import { Breadcrumbs } from \"@mui/material\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport useUrlParams from \"../../../../../../hooks/useUrlParams\";\r\n\r\nexport default function BreadCrumbs({ list }: { list: Array<any> }) {\r\n  const location = useLocation();\r\n  const { searchParams } = useUrlParams();\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <div role=\"presentation\" onClick={handleClick}>\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {list.map((item, idx) => {\r\n          return (\r\n            <Link\r\n              key={idx}\r\n              to={\r\n                item.link +\r\n                `?drawer=${searchParams.get(\r\n                  \"drawer\"\r\n                )}&pageSize=${searchParams.get(\"pageSize\")}`\r\n              }\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: item.link === location.pathname ? \"#f97316\" : \"black\",\r\n              }}\r\n            >\r\n              {item.text}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n","export default function storedLocalStorage(obj: any, storageName: string) {\r\n  const initialStateJSON = JSON.stringify(obj);\r\n  const storedInitialStateJSON = localStorage.getItem(storageName);\r\n\r\n  const initialStateStored = storedInitialStateJSON\r\n    ? storedInitialStateJSON\r\n    : initialStateJSON;\r\n  localStorage.setItem(storageName, initialStateStored);\r\n\r\n  const listStorageName = [\r\n    \"VPolicyInitialState\",\r\n    \"BPolicyInitialState\",\r\n    \"FPolicyInitialState\",\r\n    \"MPolicyInitialState\",\r\n    \"MSPRPolicyInitialState\",\r\n    \"PAPolicyInitialState\",\r\n    \"CGLPolicyInitialState\",\r\n  ];\r\n  listStorageName.forEach((names: string) => {\r\n    if (names !== storageName) {\r\n      localStorage.removeItem(names);\r\n    }\r\n  });\r\n\r\n  return (localStorage.getItem(storageName) as string)\r\n    ? JSON.parse(localStorage.getItem(storageName) as string)\r\n    : obj;\r\n}\r\n"],"names":["DataGridTable","_ref","onSelectionChange","_ref$initialPage","initialPage","columns","_ref$rowHeight","rowHeight","getRowId","rows","isLoading","mutipleSelect","_ref$height","height","_useUrlParams","useUrlParams","searchParams","setSearchParams","_useState","useState","_useState2","_slicedToArray","rowSelectionModel","setRowSelectionModel","_useState3","_useState4","doubleClick","setDoubleClick","_React$useState","React","pageSize","parseInt","get","page","_React$useState2","paginationModel","setPaginationModel","useEffect","updateColumns","map","column","field","_objectSpread","colSpan","align","_jsx","Box","sx","width","overflowX","position","children","DataGrid","slots","loadingOverlay","LinearProgress","loading","id","_jsxs","style","display","onClick","checkboxSelection","disableRowSelectionOnClick","initialState","pagination","pageSizeOptions","onRowDoubleClick","params","d","data","length","onRowSelectionModelChange","selection","selectionSet","Set","result","filter","s","has","cursor","onPaginationModelChange","model","prev","set","toString","top","left","transform","bgcolor","boxShadow","p","heigth","ModalWithTable","queryKey","setRows","onCloseModal","showModal","onClickCloseIcon","searchOnChange","Modal","open","onClose","right","IconButton","color","CloseIcon","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","concat","row","bondsPolicyComponents","link","text","jsongStringInitialState","form_action","form_type","sub_account","client_id","client_name","client_address","agent_id","agent_name","agent_com","PolicyAccount","PolicyNo","policyType","biddingDate","Date","time","DateIssued","validity","officer","unit","obligee","printType","officerName","officerTaxCertNo","officerIssuedLoc","officerDateIssued","insuranceCapacity","insuranceOfficerTaxCert","insuranceIssuedLoc","insuranceDateIssued","insuredValue","percentagePremium","totalPremium","vat","docStamp","localGovTaxPercent","localGovTax","umis","principal","totalDue","bondActioMode","storagePolicy_","reducer","state","action","type","newState","_defineProperty","value","localStorage","setItem","JSON","stringify","BondContext","createContext","storedLocalStorage","queryKeySearchPolicy","queryKeySearchClientEntry","queryKeySearchAgentEntry","queryKeyNeedData","queryKeyAddOrUpdatePolicy","queryKeyDeletePolicy","vpolicyColumn","headerName","flex","vpolicyKey","BondsPolicy","_queryFn","_queryFn2","_queryFn3","_queryFn4","_mutationFn","_onSuccess","_mutationFn2","_onSuccess2","_updateQueryByKey","_data$data","_useReducer","useReducer","_useReducer2","dispatch","_useContext","useContext","AuthContext","myAxios","user","clientRows","setClientRows","agentRows","setAgentRows","_useState5","_useState6","search","setSearch","_useState7","_useState8","searchShow","setSearchShow","_useState9","_useState10","loadSearchingChange","setLoadSearchingChange","_useState11","_useState12","Mortgagee","setMortgagee","_useState13","thirdparty","toLowerCase","compre","_useState14","showField","setShowField","queryClient","useQueryClient","isAddOrEditMode","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","response","bondsPolicy","searchLoading","_useQuery2","_callee2","_context2","clients","clientLoading","_useQuery3","_callee3","_context3","agents","agentLoading","_useQuery4","_callee4","_context4","console","log","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee5","variables","_context5","post","_x2","_callee6","_context6","success","updateQueryByKey","Swal","icon","title","message","showConfirmButton","timer","then","backToDefaultState","mutate","loadingAddNew","_useMutation2","_x3","_callee7","_context7","_x4","_callee8","_context8","mutateDelete","loadingDelete","handleInputChange","e","_e$target","target","name","customInputchange","computation","inpInsurerVal","parseFloat","inPercentagePremium","inpLocalGovTaxPercent","LOGPercentage","NewTotalPremium","toFixed","json","resetAll","undefined","prem_text_one","prem_text_two","Object","entries","forEach","_ref2","key","_callee9","_context9","Promise","all","invalidateQueries","Provider","BreadCrumbs","list","theme","alignItems","columnGap","breakpoints","down","flexDirection","marginTop","Button","startIcon","AddIcon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","disabled","SaveIcon","CircularProgress","green","marginLeft","backgroundColor","pink","DeleteIcon","gap","ContentPasteSearchIcon","cancelButtonText","FormControl","InputLabel","Select","labelId","items","idx","MenuItem","Acronym","trim","Outlet","alert","selectedIDs","selectedRowData","_selectedRowData$","Account","PolicyType","Percentage","BidDate","BidTime","Obligee","UnitDetail","BondValue","NotaryName","TaxCerNo","IssuedLocation","NIssued","CapacityAs","TaxCerNoCorp","IssuedLoctCorp","CIssued","Officer","OPosition","Validity","IDNo","SubAcct","Notarial","Misc","AgentID","AgentCom","client_fullname","agent_fullname","address","location","useLocation","role","event","preventDefault","Breadcrumbs","separator","NavigateNextIcon","fontSize","item","Link","to","textDecoration","pathname","obj","storageName","initialStateJSON","storedInitialStateJSON","getItem","initialStateStored","names","removeItem","parse"],"sourceRoot":""}