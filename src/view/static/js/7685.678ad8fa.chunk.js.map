{"version":3,"file":"static/js/7685.678ad8fa.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/MSPR/MSPRPolicyComponents/MSPRPolicyInformation.tsx","../node_modules/@mui/icons-material/PersonSearch.js"],"sourcesContent":["import React from \"react\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nexport default function CustomDatePicker({\r\n  label,\r\n  name,\r\n  onChange,\r\n  value,\r\n  ...rest\r\n}: any) {\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        value={value}\r\n        onChange={onChange}\r\n        slotProps={{\r\n          textField: {\r\n            size: \"small\",\r\n            label,\r\n            name,\r\n          },\r\n        }}\r\n        {...rest}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import { useContext, useState } from \"react\";\r\nimport { MSPRContext } from \"../MSPRPolicy\";\r\nimport {\r\n  IconButton,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\r\nimport CustomDatePicker from \"../../../../../../../../components/DatePicker\";\r\nimport ModalWithTable from \"../../../../../../../../components/ModalWithTable\";\r\n\r\nexport const clientColumn = [\r\n  { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\r\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\r\n  {\r\n    field: \"entry_type\",\r\n    headerName: \"ID Type\",\r\n    width: 150,\r\n  },\r\n];\r\n\r\nexport const agentColumn = [\r\n  { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\r\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\r\n  {\r\n    field: \"entry_type\",\r\n    headerName: \"ID Type\",\r\n    width: 150,\r\n  },\r\n];\r\n\r\nconst queryKeyClient = \"vehicle-policy\";\r\nconst queryKeyAgent = \"agent-policy\";\r\n\r\nexport default function MSPRPolicyInformation() {\r\n  const {\r\n    state,\r\n    handleInputChange,\r\n    isLoading,\r\n    clientRows,\r\n    setClientRows,\r\n    customInputchange,\r\n    myAxios,\r\n    user,\r\n    agentRows,\r\n    setAgentRows,\r\n    data,\r\n    isAddOrEditMode,\r\n    clientLoading,\r\n    agentLoading,\r\n  } = useContext(MSPRContext);\r\n\r\n  const [openClientTableModal, setOpenClientTableModal] = useState(false);\r\n  const [openAgentTableModal, setOpenAgentTableModal] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gap: \"20px\",\r\n          gridTemplateAreas: `\"content1 content2\" \"content3 content4\" \"content5 content5\"`,\r\n        }}\r\n      >\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content1\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Insurer Information</legend>\r\n\r\n          <div style={{ display: \"flex\", columnGap: \"10px\" }}>\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Client ID\"\r\n              name=\"client_id\"\r\n              value={state.client_id}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <IconButton\r\n              disabled={isAddOrEditMode || clientLoading}\r\n              aria-label=\"search-client\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpenClientTableModal(true)}\r\n            >\r\n              <PersonSearchIcon />\r\n            </IconButton>\r\n          </div>\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Client Name\"\r\n            name=\"client_name\"\r\n            value={state.client_name}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Client Address\"\r\n            rows={3}\r\n            multiline\r\n            name=\"client_address\"\r\n            value={state.client_address}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content2\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Agent Information</legend>\r\n\r\n          <div style={{ display: \"flex\", columnGap: \"10px\" }}>\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Agent ID\"\r\n              name=\"agent_id\"\r\n              value={state.agent_id}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <IconButton\r\n              disabled={isAddOrEditMode || agentLoading}\r\n              aria-label=\"search-client\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpenAgentTableModal(true)}\r\n            >\r\n              <PersonSearchIcon />\r\n            </IconButton>\r\n          </div>\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Agent Name\"\r\n            name=\"agent_name\"\r\n            value={state.agent_name}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Commission\"\r\n            name=\"agent_com\"\r\n            value={state.agent_com}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>MSPR Policy</legend>\r\n          <FormControl size=\"small\" fullWidth disabled={isAddOrEditMode}>\r\n            <InputLabel id=\"PolicyAccount\">Account</InputLabel>\r\n            <Select\r\n              labelId=\"PolicyAccount\"\r\n              value={state.PolicyAccount}\r\n              label=\"Account\"\r\n              name=\"PolicyAccount\"\r\n              onChange={handleInputChange}\r\n            >\r\n              {[{ Account: \"\" }, ...data?.data.msprPolicy.policy_account].map(\r\n                (items: any, idx: number) => {\r\n                  return (\r\n                    <MenuItem key={idx} value={items.Account}>\r\n                      {items.Account}\r\n                    </MenuItem>\r\n                  );\r\n                }\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Policy No\"\r\n            name=\"PolicyNo\"\r\n            value={state.PolicyNo}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content4\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Period of Insurance</legend>\r\n          <CustomDatePicker\r\n            disabled={isAddOrEditMode}\r\n            label=\"Date From\"\r\n            onChange={(e: any) => {\r\n              customInputchange(e, \"DateFrom\");\r\n            }}\r\n            value={new Date(state.DateFrom)}\r\n          />\r\n          <CustomDatePicker\r\n            disabled={isAddOrEditMode}\r\n            label=\"Date To\"\r\n            onChange={(e: any) => {\r\n              customInputchange(e, \"DateTo\");\r\n            }}\r\n            value={new Date(state.DateTo)}\r\n          />\r\n          <CustomDatePicker\r\n            label=\"Date Issued\"\r\n            name=\"DateIssued\"\r\n            onChange={(e: any) => {\r\n              customInputchange(e, \"DateIssued\");\r\n            }}\r\n            value={new Date(state.DateIssued)}\r\n            disabled={isAddOrEditMode}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"grid\",\r\n            gap: \"10px\",\r\n            gridArea: \"content5\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n            gridTemplateColumns: \"repeat(2,1fr)\",\r\n          }}\r\n        >\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Premises Address\"\r\n            name=\"pAddress\"\r\n            value={state.pAddress}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Money Routes From\"\r\n            name=\"moneyRoutesFrom\"\r\n            value={state.moneyRoutesFrom}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Safe and/or Strongroom Desc.\"\r\n            name=\"safeDesc\"\r\n            value={state.safeDesc}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Money Routes To\"\r\n            name=\"moneyRoutesTo\"\r\n            value={state.moneyRoutesTo}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Method of Transportation\"\r\n            name=\"methodTrans\"\r\n            value={state.methodTrans}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <div style={{ display: \"flex\", gap: \"12px\", flexDirection: \"column\" }}>\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Guards Minimum Number\"\r\n              name=\"guardsMinNum\"\r\n              value={state.guardsMinNum}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Messenger Maximum Number\"\r\n              name=\"messengerMaxNum\"\r\n              value={state.messengerMaxNum}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n      <ModalWithTable\r\n        showModal={openClientTableModal}\r\n        onCloseModal={() => {\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-client-vehicle-policy?clientSearch=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setClientRows(res?.data.vehiclePolicy?.clients);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={isLoading}\r\n        queryKey={queryKeyClient}\r\n        columns={clientColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.entry_client_id.toString());\r\n          });\r\n          if (selectedRowData.length <= 0) return;\r\n          customInputchange(selectedRowData[0].entry_client_id, \"client_id\");\r\n          customInputchange(selectedRowData[0].fullname, \"client_name\");\r\n          customInputchange(selectedRowData[0].address, \"client_address\");\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        id=\"entry_client_id\"\r\n        rows={clientRows}\r\n        setRows={setClientRows}\r\n      />\r\n      <ModalWithTable\r\n        showModal={openAgentTableModal}\r\n        onCloseModal={() => {\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-agent-vehicle-policy?agentSearch=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setAgentRows(res?.data.vehiclePolicy?.agents);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={isLoading}\r\n        queryKey={queryKeyAgent}\r\n        columns={agentColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.entry_agent_id.toString());\r\n          });\r\n          if (selectedRowData.length <= 0) return;\r\n          customInputchange(selectedRowData[0].entry_agent_id, \"agent_id\");\r\n          customInputchange(selectedRowData[0].fullname, \"agent_name\");\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        id=\"entry_agent_id\"\r\n        rows={agentRows}\r\n        setRows={setAgentRows}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","slotProps","textField","size","clientColumn","field","headerName","width","flex","agentColumn","queryKeyClient","queryKeyAgent","MSPRPolicyInformation","_useContext","useContext","MSPRContext","state","handleInputChange","isLoading","clientRows","setClientRows","customInputchange","myAxios","user","agentRows","setAgentRows","data","isAddOrEditMode","clientLoading","agentLoading","_useState","useState","_useState2","_slicedToArray","openClientTableModal","setOpenClientTableModal","_useState3","_useState4","openAgentTableModal","setOpenAgentTableModal","_jsxs","style","display","gap","gridTemplateAreas","flexDirection","gridArea","padding","border","borderRadius","color","columnGap","TextField","disabled","fullWidth","variant","client_id","InputProps","readOnly","IconButton","onClick","PersonSearchIcon","client_name","rows","multiline","client_address","agent_id","agent_name","agent_com","marginBottom","FormControl","InputLabel","id","Select","labelId","PolicyAccount","Account","concat","_toConsumableArray","msprPolicy","policy_account","map","items","idx","MenuItem","PolicyNo","e","Date","DateFrom","DateTo","DateIssued","gridTemplateColumns","pAddress","moneyRoutesFrom","safeDesc","moneyRoutesTo","methodTrans","guardsMinNum","messengerMaxNum","ModalWithTable","showModal","onCloseModal","onClickCloseIcon","searchOnChange","get","target","headers","Authorization","accessToken","then","res","_res$data$vehiclePoli","success","alert","message","vehiclePolicy","clients","height","queryKey","columns","onSelectionChange","rowSelectionModel","length","selectedIDs","Set","selectedRowData","filter","row","has","entry_client_id","toString","fullname","address","setRows","_res$data$vehiclePoli2","agents","entry_agent_id","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d"],"sourceRoot":""}