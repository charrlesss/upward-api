{"version":3,"file":"static/js/6813.b17b5657.chunk.js","mappings":"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","sources":["feautures/Admin/Dashboard.tsx"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { myAxios } from \"../../lib/axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../components/AuthContext\";\nimport \"../../style/dashboard.css\";\n\nexport default function Dashboard() {\n  const { user } = useContext(AuthContext);\n  const { data: renewalData, isLoading: isLoadingRenewal } = useQuery({\n    queryKey: \"renewal-by-month\",\n    queryFn: async () =>\n      await myAxios.get(\"/get-renewal-this-month\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  const { data: claimsData, isLoading: isLoadingClaims } = useQuery({\n    queryKey: \"claims-notice\",\n    queryFn: async () =>\n      await myAxios.get(\"/get-claims-notice\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  return (\n    <div id=\"main\">\n      {(user?.userAccess === \"PRODUCTION\" ||\n        user?.userAccess === \"ACCOUNTING\" ||\n        user?.userAccess === \"PRODUCTION_ACCOUNTING\" ||\n        user?.userAccess === \"ADMIN\") && (\n        <div className=\"section-content\">\n          <h1 className=\"first\">RENEWAL</h1>\n          <div id=\"content\">\n            {isLoadingRenewal ? (\n              <div>Loading...</div>\n            ) : (\n              <table id=\"table\">\n                <tbody>\n                  {renewalData?.data.renewal?.length <= 0 && (\n                    <tr className=\"header first\">\n                      <td>Name</td>\n                      <td>POLICY NO</td>\n                      <td>SUM INSURED</td>\n                      <td>DATE TO</td>\n                      <td>CHASSIS</td>\n                      <td>UNIT</td>\n                    </tr>\n                  )}\n                  {renewalData?.data.renewal?.map((itm: any, idx: number) => {\n                    return (\n                      <React.Fragment key={idx}>\n                        {itm.isHeader ? (\n                          <>\n                            <tr className=\"heading first\">\n                              <td colSpan={6}>{itm.header}</td>\n                            </tr>\n                            <tr className=\"header first\">\n                              <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n                                Name\n                              </td>\n                              <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n                                POLICY NO\n                              </td>\n                              <td>SUM INSURED</td>\n                              <td>DATE TO</td>\n                              {itm.isVPolicy === \"1\" && (\n                                <>\n                                  <td>CHASSIS</td>\n                                  <td>UNIT</td>\n                                </>\n                              )}\n                            </tr>\n                          </>\n                        ) : (\n                          <tr>\n                            <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n                              {itm.AssuredName}\n                            </td>\n                            <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n                              {itm.PolicyNo}\n                            </td>\n                            <td>{itm.InsuredValue}</td>\n                            <td>{itm.DateExpired}</td>\n                            {itm.isVPolicy === \"1\" && (\n                              <>\n                                <td>{itm.ChassisNo}</td>\n                                <td>{itm.unit}</td>\n                              </>\n                            )}\n                          </tr>\n                        )}\n                      </React.Fragment>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      )}\n      {(user?.userAccess === \"CLAIMS\" || user?.userAccess === \"ADMIN\") && (\n        <div className=\"section-content\">\n          <h1 className=\"second\">CLAIMS</h1>\n          <div id=\"content\">\n            {isLoadingClaims ? (\n              <div>Loading...</div>\n            ) : (\n              <table id=\"table\">\n                <tbody>\n                  <tr className=\"header second\">\n                    <td>Claims ID.</td>\n                    <td>Name</td>\n                    <td>Policy No.</td>\n                    <td>Date Accident</td>\n                    <td>Date Reported</td>\n                    <td>Claim Type</td>\n                    <td>Status</td>\n                  </tr>\n                  {claimsData?.data.claims?.map((itm: any, idx: number) => {\n                    return (\n                      <tr key={idx}>\n                        <td>{itm.claims_id}</td>\n                        <td>{itm.AssuredName}</td>\n                        <td>{itm.PolicyNo}</td>\n                        <td>{itm.dateAccident}</td>\n                        <td>{itm.dateReported}</td>\n                        <td>{itm.claim_type}</td>\n                        <td>{itm.status}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["Dashboard","_queryFn","_queryFn2","_renewalData$data$ren","_renewalData$data$ren2","_claimsData$data$clai","user","useContext","AuthContext","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","myAxios","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","renewalData","data","isLoadingRenewal","isLoading","_useQuery2","_callee2","_context2","claimsData","isLoadingClaims","_jsxs","id","children","userAccess","className","_jsx","renewal","length","map","itm","idx","React","isHeader","_Fragment","colSpan","header","isVPolicy","AssuredName","PolicyNo","InsuredValue","DateExpired","ChassisNo","unit","claims","claims_id","dateAccident","dateReported","claim_type","status"],"sourceRoot":""}