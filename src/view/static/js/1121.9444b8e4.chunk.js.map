{"version":3,"file":"static/js/1121.9444b8e4.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehicleComponent/PolicyInformation.tsx","../node_modules/@mui/icons-material/PersonSearch.js"],"sourcesContent":["import React from \"react\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nexport default function CustomDatePicker({\r\n  label,\r\n  name,\r\n  onChange,\r\n  value,\r\n  ...rest\r\n}: any) {\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        value={value}\r\n        onChange={onChange}\r\n        slotProps={{\r\n          textField: {\r\n            size: \"small\",\r\n            label,\r\n            name,\r\n          },\r\n        }}\r\n        {...rest}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { VehicleContext } from \"../VehiclePolicy\";\r\nimport {\r\n  IconButton,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\r\nimport CustomDatePicker from \"../../../../../../../../components/DatePicker\";\r\nimport ModalWithTable from \"../../../../../../../../components/ModalWithTable\";\r\nimport PolicyIcon from \"@mui/icons-material/Policy\";\r\n\r\nexport const clientColumn = [\r\n  { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\r\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\r\n  {\r\n    field: \"entry_type\",\r\n    headerName: \"ID Type\",\r\n    width: 150,\r\n  },\r\n];\r\nexport const tplColumns = [\r\n  { field: \"Source_No\", headerName: \"ID\", width: 130 },\r\n  { field: \"Cost\", headerName: \"Cost\", flex: 1 },\r\n];\r\n\r\nexport const agentColumn = [\r\n  { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\r\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\r\n  {\r\n    field: \"entry_type\",\r\n    headerName: \"ID Type\",\r\n    width: 150,\r\n  },\r\n];\r\n\r\nconst queryKeyClient = \"vehicle-policy\";\r\nconst queryKeyAgent = \"agent-policy\";\r\nconst queryKeyTPL = \"tpl-policy\";\r\nexport default function PolicyInformation() {\r\n  const {\r\n    state,\r\n    handleInputChange,\r\n    isLoading,\r\n    clientRows,\r\n    setClientRows,\r\n    handleDateChange,\r\n    myAxios,\r\n    user,\r\n    agentRows,\r\n    setAgentRows,\r\n    data,\r\n    tplLoading,\r\n    tplId,\r\n    setTplId,\r\n    isAddOrEditMode,\r\n  } = useContext(VehicleContext);\r\n  const [openClientTableModal, setOpenClientTableModal] = useState(false);\r\n  const [openAgentTableModal, setOpenAgentTableModal] = useState(false);\r\n  const [openTPLID, setOpenTPLID] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gap: \"20px\",\r\n          gridTemplateAreas: `\"content1 content2\" \"content3 content4\" \"content5 content5\"`,\r\n        }}\r\n      >\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content1\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Insurer Information</legend>\r\n\r\n          <div style={{ display: \"flex\", columnGap: \"10px\" }}>\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Client ID\"\r\n              name=\"client_id\"\r\n              value={state.client_id}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <IconButton\r\n              disabled={isAddOrEditMode}\r\n              aria-label=\"search-client\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpenClientTableModal(true)}\r\n            >\r\n              <PersonSearchIcon />\r\n            </IconButton>\r\n          </div>\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Client Name\"\r\n            name=\"client_name\"\r\n            value={state.client_name}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Client Address\"\r\n            rows={3}\r\n            multiline\r\n            name=\"client_address\"\r\n            value={state.client_address}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content2\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Agent Information</legend>\r\n\r\n          <div style={{ display: \"flex\", columnGap: \"10px\" }}>\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Agent ID\"\r\n              name=\"agent_id\"\r\n              value={state.agent_id}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <IconButton\r\n              disabled={isAddOrEditMode}\r\n              aria-label=\"search-client\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpenAgentTableModal(true)}\r\n            >\r\n              <PersonSearchIcon />\r\n            </IconButton>\r\n          </div>\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Agent Name\"\r\n            name=\"agent_name\"\r\n            value={state.agent_name}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Commission\"\r\n            name=\"agent_com\"\r\n            value={state.agent_com}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content3\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Vehivle Policy</legend>\r\n          <FormControl size=\"small\" fullWidth disabled={isAddOrEditMode}>\r\n            <InputLabel id=\"PolicyAccount\">Account</InputLabel>\r\n            <Select\r\n              labelId=\"PolicyAccount\"\r\n              value={state.PolicyAccount}\r\n              label=\"Account\"\r\n              name=\"PolicyAccount\"\r\n              onChange={handleInputChange}\r\n            >\r\n              {data.data.vehiclePolicy.policy_account[\r\n                `${state.form_type.toLowerCase()}`\r\n              ].map((items: any, idx: number) => {\r\n                return (\r\n                  <MenuItem key={idx} value={items.Account}>\r\n                    {items.Account}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {state.form_type.toLowerCase() === \"tpl\" ? (\r\n            <React.Fragment>\r\n              {tplLoading ? (\r\n                <div>Loading IDs Please wait...</div>\r\n              ) : (\r\n                <div style={{ display: \"flex\", columnGap: \"10px\" }}>\r\n                  <TextField\r\n                    disabled={isAddOrEditMode}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Policy No\"\r\n                    name=\"PolicyNo\"\r\n                    value={state.PolicyNo}\r\n                    onChange={handleInputChange}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  <IconButton\r\n                    disabled={isAddOrEditMode}\r\n                    aria-label=\"search-client\"\r\n                    color=\"secondary\"\r\n                    onClick={() => setOpenTPLID(true)}\r\n                  >\r\n                    <PolicyIcon />\r\n                  </IconButton>\r\n                </div>\r\n              )}\r\n            </React.Fragment>\r\n          ) : state.form_action === \"REG\" ? (\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Policy No.\"\r\n              name=\"PolicyNo\"\r\n              value={state.PolicyNo}\r\n              onChange={handleInputChange}\r\n            />\r\n          ) : (\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Policy No.\"\r\n              name=\"PolicyNo\"\r\n              value={state.PolicyNo}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Certificate of Cover No.\"\r\n            name=\"CCN\"\r\n            value={state.CCN}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Official Receipt No.\"\r\n            name=\"ORN\"\r\n            value={state.ORN}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content4\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Period of Insurance</legend>\r\n          <CustomDatePicker\r\n            disabled={isAddOrEditMode}\r\n            label=\"Date From\"\r\n            onChange={(e: any) => {\r\n              handleDateChange(e, \"DateFrom\");\r\n            }}\r\n            value={new Date(state.DateFrom)}\r\n          />\r\n          <CustomDatePicker\r\n            disabled={isAddOrEditMode}\r\n            label=\"Date To\"\r\n            onChange={(e: any) => {\r\n              handleDateChange(e, \"DateTo\");\r\n            }}\r\n            value={new Date(state.DateTo)}\r\n          />\r\n          <CustomDatePicker\r\n            label=\"Date Issued\"\r\n            name=\"DateIssued\"\r\n            onChange={(e: any) => {\r\n              handleDateChange(e, \"DateIssued\");\r\n            }}\r\n            value={new Date(state.DateIssued)}\r\n            disabled={isAddOrEditMode}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n            gridArea: \"content5\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Insured Unit</legend>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: \"10px\",\r\n              gridArea: \"content4\",\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Model\"\r\n              name=\"Model\"\r\n              value={state.Model}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Make\"\r\n              name=\"Make\"\r\n              value={state.Make}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Type of Body\"\r\n              name=\"TB\"\r\n              value={state.TB}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Color\"\r\n              name=\"Color\"\r\n              value={state.Color}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"BLT File No\"\r\n              name=\"BLTFileNo\"\r\n              value={state.BLTFileNo}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: \"10px\",\r\n              gridArea: \"content4\",\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Plate No\"\r\n              name=\"PlateNo\"\r\n              value={state.PlateNo}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Chassis No\"\r\n              name=\"ChassisNo\"\r\n              value={state.ChassisNo}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Motor No.\"\r\n              name=\"MotorNo\"\r\n              value={state.MotorNo}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Authorized Capacity\"\r\n              name=\"AuthorizedCapacity\"\r\n              value={state.AuthorizedCapacity}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Unladen Weigth\"\r\n              name=\"UnladenWeigth\"\r\n              value={state.UnladenWeigth}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n      <ModalWithTable\r\n        showModal={openClientTableModal}\r\n        onCloseModal={() => {\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-client-vehicle-policy?clientSearch=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setClientRows(res?.data.vehiclePolicy?.clients);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={isLoading}\r\n        queryKey={queryKeyClient}\r\n        columns={clientColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.entry_client_id.toString());\r\n          });\r\n          if (selectedRowData.length <= 0) return;\r\n          handleDateChange(selectedRowData[0].entry_client_id, \"client_id\");\r\n          handleDateChange(selectedRowData[0].fullname, \"client_name\");\r\n          handleDateChange(selectedRowData[0].address, \"client_address\");\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        id=\"entry_client_id\"\r\n        rows={clientRows}\r\n        setRows={setClientRows}\r\n      />\r\n      <ModalWithTable\r\n        showModal={openAgentTableModal}\r\n        onCloseModal={() => {\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-agent-vehicle-policy?agentSearch=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setAgentRows(res?.data.vehiclePolicy?.agents);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={isLoading}\r\n        queryKey={queryKeyAgent}\r\n        columns={agentColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.entry_agent_id.toString());\r\n          });\r\n          if (selectedRowData.length <= 0) return;\r\n          handleDateChange(selectedRowData[0].entry_agent_id, \"agent_id\");\r\n          handleDateChange(selectedRowData[0].fullname, \"agent_name\");\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        id=\"entry_agent_id\"\r\n        rows={agentRows}\r\n        setRows={setAgentRows}\r\n      />\r\n      <ModalWithTable\r\n        showModal={openTPLID}\r\n        onCloseModal={() => {\r\n          setOpenTPLID(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setOpenTPLID(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          myAxios\r\n            .get(\r\n              `/task/production/tpl-ids-vehicle-policy?tplIDSearch=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setTplId(res?.data);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={tplLoading}\r\n        queryKey={queryKeyTPL}\r\n        columns={tplColumns}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.Source_No.toString());\r\n          });\r\n\r\n          if (selectedRowData.length <= 0) return;\r\n\r\n          handleDateChange(selectedRowData[0].Source_No, \"PolicyNo\");\r\n          handleDateChange(selectedRowData[0].Cost, \"rateCost\");\r\n          handleDateChange(\r\n            selectedRowData[0].Source_No_Ref_ID,\r\n            \"Source_No_Ref_ID\"\r\n          );\r\n          setOpenTPLID(false);\r\n        }}\r\n        id=\"Source_No\"\r\n        rows={tplId?.vehiclePolicy?.tpl}\r\n        setRows={setTplId}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","slotProps","textField","size","clientColumn","field","headerName","width","flex","tplColumns","agentColumn","queryKeyClient","queryKeyAgent","queryKeyTPL","PolicyInformation","_tplId$vehiclePolicy","_useContext","useContext","VehicleContext","state","handleInputChange","isLoading","clientRows","setClientRows","handleDateChange","myAxios","user","agentRows","setAgentRows","data","tplLoading","tplId","setTplId","isAddOrEditMode","_useState","useState","_useState2","_slicedToArray","openClientTableModal","setOpenClientTableModal","_useState3","_useState4","openAgentTableModal","setOpenAgentTableModal","_useState5","_useState6","openTPLID","setOpenTPLID","_jsxs","style","display","gap","gridTemplateAreas","flexDirection","gridArea","padding","border","borderRadius","color","columnGap","TextField","disabled","fullWidth","variant","client_id","InputProps","readOnly","IconButton","onClick","PersonSearchIcon","client_name","rows","multiline","client_address","agent_id","agent_name","agent_com","FormControl","InputLabel","id","Select","labelId","PolicyAccount","vehiclePolicy","policy_account","concat","form_type","toLowerCase","map","items","idx","MenuItem","Account","React","PolicyNo","PolicyIcon","form_action","CCN","ORN","e","Date","DateFrom","DateTo","DateIssued","Model","Make","TB","Color","BLTFileNo","PlateNo","ChassisNo","MotorNo","AuthorizedCapacity","UnladenWeigth","ModalWithTable","showModal","onCloseModal","onClickCloseIcon","searchOnChange","get","target","headers","Authorization","accessToken","then","res","_res$data$vehiclePoli","success","alert","message","clients","height","queryKey","columns","onSelectionChange","rowSelectionModel","length","selectedIDs","Set","selectedRowData","filter","row","has","entry_client_id","toString","fullname","address","setRows","_res$data$vehiclePoli2","agents","entry_agent_id","Source_No","Cost","Source_No_Ref_ID","tpl","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d"],"sourceRoot":""}