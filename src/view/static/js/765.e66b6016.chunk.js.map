{"version":3,"file":"static/js/765.e66b6016.chunk.js","mappings":"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","sources":["components/DataGridTable.tsx","components/DropdownButton.tsx","feautures/Admin/Reference/PolicyAccount.tsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, LinearProgress } from \"@mui/material\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridRowSelectionModel,\r\n  GridRowIdGetter,\r\n} from \"@mui/x-data-grid\";\r\nimport useUrlParams from \"../hooks/useUrlParams\";\r\n\r\ninterface DataGridTableParams {\r\n  onSelectionChange: (rowSelected: GridRowSelectionModel, data: any) => void;\r\n  columns: GridColDef[];\r\n  initialPage?: number;\r\n  rowHeight?: number;\r\n  queryKey: Array<string>;\r\n  dataKey?: string;\r\n  getRowId: GridRowIdGetter<any> | undefined;\r\n  rows: GridRowSelectionModel;\r\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\r\n  isLoading: boolean;\r\n  mutipleSelect: boolean;\r\n  height?: string;\r\n}\r\n\r\nexport default function DataGridTable({\r\n  onSelectionChange,\r\n  initialPage = 10,\r\n  columns,\r\n  rowHeight = 35,\r\n  getRowId,\r\n  rows,\r\n  isLoading,\r\n  mutipleSelect,\r\n  height = \"500px\",\r\n}: DataGridTableParams) {\r\n  const { searchParams, setSearchParams } = useUrlParams();\r\n  const [rowSelectionModel, setRowSelectionModel] =\r\n    useState<GridRowSelectionModel>([]);\r\n  const [doubleClick, setDoubleClick] = useState(false);\r\n  const [paginationModel, setPaginationModel] = React.useState({\r\n    pageSize: parseInt(searchParams.get(\"pageSize\") as string) || 100,\r\n    page: parseInt(searchParams.get(\"page\") as string) || 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setRowSelectionModel(\r\n      (searchParams.get(\"selected\") as string) === \"\"\r\n        ? []\r\n        : [searchParams.get(\"selected\") as string]\r\n    );\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    onSelectionChange(rowSelectionModel, rows);\r\n  }, [doubleClick]);\r\n\r\n  if (isLoading) {\r\n    const updateColumns: any = columns.map((column) => {\r\n      if (column.field === \"id\") {\r\n        column = { ...column, colSpan: 4, align: \"center\" };\r\n      }\r\n      return column;\r\n    });\r\n    return (\r\n      <Box\r\n        sx={{\r\n          height: 500,\r\n          width: \"100%\",\r\n          overflowX: \"scroll\",\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <DataGrid\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rows={[{ id: \"Loading...\" }]}\r\n          columns={updateColumns}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: height,\r\n        width: \"100%\",\r\n        overflowX: \"scroll\",\r\n        position: \"absolute\",\r\n      }}\r\n    >\r\n      <button\r\n        id=\"reset-data-grid-selection\"\r\n        style={{ display: \"none\" }}\r\n        onClick={() => {\r\n          setRowSelectionModel([]);\r\n        }}\r\n      >\r\n        reset\r\n      </button>\r\n      {mutipleSelect ? (\r\n        <DataGrid\r\n          checkboxSelection\r\n          disableRowSelectionOnClick\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rowHeight={rowHeight}\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: initialPage },\r\n            },\r\n          }}\r\n          pageSizeOptions={[initialPage, 25, 50, 100]}\r\n          getRowId={getRowId}\r\n        />\r\n      ) : (\r\n        <DataGrid\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rowHeight={rowHeight}\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: initialPage },\r\n            },\r\n          }}\r\n          checkboxSelection\r\n          pageSizeOptions={[initialPage, 25, 50, 100]}\r\n          onRowDoubleClick={(params) => {\r\n            setDoubleClick((d) => !d);\r\n            setRowSelectionModel((data) => {\r\n              if (data.length > 0 && data[0] === params.id) {\r\n                return [];\r\n              }\r\n              return [params.id];\r\n            });\r\n          }}\r\n          onRowSelectionModelChange={(selection) => {\r\n            if (selection.length > 1) {\r\n              const selectionSet = new Set(rowSelectionModel);\r\n              const result = selection.filter((s) => !selectionSet.has(s));\r\n              onSelectionChange(result, rows);\r\n              setRowSelectionModel(result);\r\n            } else {\r\n              onSelectionChange(selection, rows);\r\n              setRowSelectionModel(selection);\r\n            }\r\n          }}\r\n          disableRowSelectionOnClick\r\n          rowSelectionModel={rowSelectionModel}\r\n          sx={{\r\n            \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer\":\r\n              {\r\n                display: \"none\",\r\n              },\r\n            \"& .MuiDataGrid-row\": {\r\n              cursor: \"pointer\",\r\n            },\r\n          }}\r\n          getRowId={getRowId}\r\n          paginationModel={paginationModel}\r\n          onPaginationModelChange={(model) => {\r\n            setPaginationModel(model);\r\n            setSearchParams((prev) => {\r\n              prev.set(\"page\", model.page.toString());\r\n              prev.set(\"pageSize\", model.pageSize.toString());\r\n              return prev;\r\n            });\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Menu, MenuItem } from \"@mui/material\";\r\nimport { green } from \"@mui/material/colors\";\r\n\r\nexport function Dropdown({\r\n  setExportMode,\r\n}: {\r\n  setExportMode: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setExportMode(true);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        id=\"basic-button\"\r\n        aria-controls={open ? \"basic-menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n        variant=\"contained\"\r\n        sx={{\r\n          backgroundColor: green[500],\r\n          \"&:hover\": {\r\n            backgroundColor: green[600],\r\n          },\r\n        }}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleClose}>Export as Excel All Data </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          Export as Excel Only Data in Table{\" \"}\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>Print Data in Table</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {\r\n  useContext,\r\n  useState,\r\n  useRef,\r\n  FormEvent,\r\n  useReducer,\r\n  useEffect,\r\n} from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport useUrlParams from \"../../../hooks/useUrlParams\";\r\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport DataGridTable from \"../../../components/DataGridTable\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport { AuthContext } from \"../../../components/AuthContext\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport Swal from \"sweetalert2\";\r\nimport { wait } from \"../../../lib/wait\";\r\nimport { throttle } from \"lodash\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport { Dropdown } from \"../../../components/DropdownButton\";\r\n\r\nconst initialState = {\r\n  AccountCode: \"\",\r\n  Account: \"\",\r\n  Description: \"\",\r\n  COM: false,\r\n  TPL: false,\r\n  MAR: false,\r\n  FIRE: false,\r\n  G02: false,\r\n  G13: false,\r\n  G16: false,\r\n  MSPR: false,\r\n  PA: false,\r\n  CGL: false,\r\n  Inactive: false,\r\n};\r\nexport const reducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FIELD\":\r\n      return {\r\n        ...state,\r\n        [action.field]: action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const poliyAccountColumn = [\r\n  { field: \"Account\", headerName: \"Account\", width: 130 },\r\n  { field: \"AccountCode\", headerName: \"Account Code\", width: 200 },\r\n  { field: \"Description\", headerName: \"Description\", flex: 1 },\r\n  { field: \"createdAt\", headerName: \"Created At\", width: 200 },\r\n];\r\nconst queryKey = \"policy-account\";\r\nexport default function PolicyAccount() {\r\n  const { searchParams, setSearchParams } = useUrlParams();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  const [exportMode, setExportMode] = useState(false);\r\n  const [loadingSearch, setLoadingSearch] = useState(false);\r\n  const [save, setSave] = useState(searchParams.get(\"selected\") !== \"\");\r\n  const [addNew, setAddNew] = useState(searchParams.get(\"selected\") !== \"\");\r\n  const [deleting, setDeleting] = useState(searchParams.get(\"selected\") !== \"\");\r\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\r\n  const submitButton = useRef<HTMLButtonElement>(null);\r\n\r\n  const [hasSelected, setHasSelected] = useState(\r\n    searchParams.get(\"selected\") !== \"\"\r\n  );\r\n  const queryClient = useQueryClient();\r\n\r\n  const { isLoading } = useQuery({\r\n    queryKey,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/reference/get-policy-account?policySearch=${\r\n          searchParams.get(\"policySearch\") as string\r\n        }`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      setRows((res as any)?.data.policy);\r\n    },\r\n  });\r\n  const {\r\n    mutate,\r\n    isLoading: loadingAddNew,\r\n    variables,\r\n  } = useMutation({\r\n    mutationKey: queryKey,\r\n    mutationFn: async (variables: any) => {\r\n      if (variables.mode && variables.mode === \"delete\") {\r\n        return await myAxios.post(\r\n          \"/reference/delete-policy-account\",\r\n          variables,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      }\r\n      if (hasSelected) {\r\n        delete variables.mode;\r\n        return await myAxios.post(\r\n          \"/reference/update-policy-account\",\r\n          variables,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      }\r\n      delete variables.mode;\r\n      return await myAxios.post(\"/reference/add-policy-account\", variables, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      });\r\n    },\r\n    onSuccess: (res) => {\r\n      if (res.data.success) {\r\n        queryClient.invalidateQueries(queryKey);\r\n        return Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      }\r\n\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: res.data.message,\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get(\"selected\") === \"\") {\r\n      return;\r\n    }\r\n\r\n    const selectedParams = searchParams.get(\"selected\") as string;\r\n    const selectedIDs = new Set([selectedParams]);\r\n    const selectedRowData = rows?.filter((row: any) =>\r\n      selectedIDs.has(row.Account.toString())\r\n    )[0];\r\n    if (selectedRowData) {\r\n      setNewStateValue(dispatch, selectedRowData);\r\n    }\r\n  }, [rows, searchParams]);\r\n\r\n  function handleSearchChange(event: any) {\r\n    setLoadingSearch(true);\r\n    const newInputValue = event.target.value;\r\n    setSearchParams((prev) => {\r\n      prev.set(\"policySearch\", newInputValue);\r\n      return prev;\r\n    });\r\n    myAxios\r\n      .get(`/reference/search-policy-account?policySearch=${newInputValue}`, {\r\n        headers: { Authorization: `Bearer ${user?.accessToken}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.success) {\r\n          setLoadingSearch(false);\r\n          setRows(res.data.policy);\r\n        }\r\n      });\r\n  }\r\n\r\n  const handleInputChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n  const handleCheckboxChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    dispatch({\r\n      type: \"UPDATE_FIELD\",\r\n      field: name,\r\n      value: !JSON.parse(value),\r\n    });\r\n  };\r\n\r\n  function handleOnSave() {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, save it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        wait(300).then(() => {\r\n          submitButton.current?.click();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n    mutate({ ...state, mode: \"\" });\r\n  }\r\n\r\n  const handleInputChangeThrottled = throttle(handleSearchChange, 300);\r\n  return (\r\n    <React.Fragment>\r\n      <Box>\r\n        <Typography variant=\"h5\" sx={{ marginBottom: \"10px\" }}>\r\n          Transaction Code Details\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        sx={(theme) => ({\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          columnGap: \"20px\",\r\n          [theme.breakpoints.down(\"sm\")]: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n            flex: 1,\r\n            marginBottom: \"15px\",\r\n          },\r\n        })}\r\n      >\r\n        <div\r\n          style={{\r\n            marginTop: \"10px\",\r\n            marginBottom: \"12px\",\r\n            flex: 1,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <TextField\r\n            label=\"Search\"\r\n            fullWidth\r\n            size=\"small\"\r\n            type=\"text\"\r\n            value={searchParams.get(\"policySearch\")}\r\n            onChange={handleInputChangeThrottled}\r\n          />\r\n        </div>\r\n        {exportMode ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              columnGap: \"5px\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"success\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                import(\"../../../lib/export\").then((m) => {\r\n                  m.exportFunction(\r\n                    `/reference/export-policy-account?policySearch=${searchParams.get(\r\n                      \"policySearch\"\r\n                    )}&isAll=true`,\r\n                    `Policy-All.xlsx`,\r\n                    myAxios,\r\n                    user\r\n                  );\r\n                });\r\n              }}\r\n            >\r\n              Export All\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"success\"\r\n              onClick={() => {\r\n                import(\"../../../lib/export\").then((m) => {\r\n                  m.exportFunction(\r\n                    `/reference/export-policy-account?policySearch=${searchParams.get(\r\n                      \"policySearch\"\r\n                    )}&isAll=false`,\r\n                    `Policy-Search.xlsx`,\r\n                    myAxios,\r\n                    user\r\n                  );\r\n                });\r\n              }}\r\n              size=\"small\"\r\n            >\r\n              Export Table\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              size=\"small\"\r\n              onClick={() => setExportMode(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              columnGap: \"20px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                columnGap: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Dropdown setExportMode={setExportMode} />\r\n              </div>\r\n              {!save && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<AddIcon />}\r\n                  id=\"entry-header-save-button\"\r\n                  onClick={() => {\r\n                    setAddNew(true);\r\n                    setSave(true);\r\n                    setHasSelected(false);\r\n                    setSearchParams((prev) => {\r\n                      prev.set(\"policySearch\", \"\");\r\n                      prev.set(\"selected\", \"\");\r\n                      return prev;\r\n                    });\r\n                    document\r\n                      .getElementById(\"reset-data-grid-selection\")\r\n                      ?.click();\r\n                  }}\r\n                >\r\n                  New\r\n                </Button>\r\n              )}\r\n\r\n              <Box sx={{ position: \"relative\" }}>\r\n                <Button\r\n                  id=\"save-entry-header\"\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  onClick={handleOnSave}\r\n                  disabled={\r\n                    (loadingAddNew && variables.mode === undefined) || !save\r\n                  }\r\n                  startIcon={<SaveIcon />}\r\n                >\r\n                  Save\r\n                </Button>\r\n\r\n                {loadingAddNew && variables.mode === undefined && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    sx={{\r\n                      color: green[500],\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      marginTop: \"-12px\",\r\n                      marginLeft: \"-12px\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </Box>\r\n              {save && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<CloseIcon />}\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: \"Are you sure?\",\r\n                      text: \"You won't be able to revert this!\",\r\n                      icon: \"warning\",\r\n                      showCancelButton: true,\r\n                      confirmButtonColor: \"#3085d6\",\r\n                      cancelButtonColor: \"#d33\",\r\n                      confirmButtonText: \"Yes, cancel it!\",\r\n                    }).then((result) => {\r\n                      if (result.isConfirmed) {\r\n                        setSave(false);\r\n                        setAddNew(false);\r\n                        setDeleting(false);\r\n                        setNewStateValue(dispatch, initialState);\r\n                        document\r\n                          .getElementById(\"reset-data-grid-selection\")\r\n                          ?.click();\r\n                        setHasSelected(false);\r\n                        setSearchParams((prev) => {\r\n                          prev.set(\"policySearch\", \"\");\r\n                          prev.set(\"selected\", \"\");\r\n                          return prev;\r\n                        });\r\n                      }\r\n                    });\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                id=\"save-entry-header\"\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: pink[500],\r\n                  \"&:hover\": {\r\n                    backgroundColor: pink[600],\r\n                  },\r\n                }}\r\n                disabled={!deleting}\r\n                startIcon={<DeleteIcon />}\r\n                onClick={() => {\r\n                  Swal.fire({\r\n                    title: \"Are you sure?\",\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"Yes, delete it!\",\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      mutate({\r\n                        Account: searchParams.get(\"selected\") as string,\r\n                        mode: \"delete\",\r\n                      });\r\n                    } else {\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Box>\r\n      {!exportMode && (\r\n        <form onSubmit={handleSubmit}>\r\n          <Box\r\n            sx={(theme) => ({\r\n              display: \"flex\",\r\n              columnGap: \"15px\",\r\n              flexDirection: \"row\",\r\n              [theme.breakpoints.down(\"md\")]: {\r\n                flexDirection: \"column\",\r\n                rowGap: \"10px\",\r\n              },\r\n            })}\r\n          >\r\n            <TextField\r\n              sx={{ minWidth: \"200px\" }}\r\n              size=\"small\"\r\n              label=\"Account\"\r\n              name=\"Account\"\r\n              required\r\n              value={state.Account}\r\n              onChange={handleInputChange}\r\n              disabled={!addNew || hasSelected}\r\n            />\r\n            <TextField\r\n              sx={{ minWidth: \"200px\" }}\r\n              size=\"small\"\r\n              label=\"Account Code\"\r\n              name=\"AccountCode\"\r\n              required\r\n              value={state.AccountCode}\r\n              onChange={handleInputChange}\r\n              disabled={!addNew}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              size=\"small\"\r\n              label=\"Description\"\r\n              name=\"Description\"\r\n              required\r\n              value={state.Description}\r\n              onChange={handleInputChange}\r\n              disabled={!addNew}\r\n            />\r\n          </Box>\r\n          <fieldset style={{ border: \"1px solid #cbd5e1\" }}>\r\n            <legend style={{ color: \"#6b7280\" }}>Policy Type</legend>\r\n            <FormGroup\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"COM\"\r\n                    checked={state.COM}\r\n                    value={state.COM}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"Comprehensive\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"MAR\"\r\n                    value={state.MAR}\r\n                    checked={state.MAR}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"Marine\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"G02\"\r\n                    value={state.G02}\r\n                    checked={state.G02}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"Bond G(02)\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"G13\"\r\n                    value={state.G13}\r\n                    checked={state.G13}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"Bond G(13)\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"G16\"\r\n                    value={state.G16}\r\n                    checked={state.G16}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"Bond G(16)\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"PA\"\r\n                    value={state.PA}\r\n                    checked={state.PA}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"PA\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"TPL\"\r\n                    value={state.TPL}\r\n                    checked={state.TPL}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"TPL\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"FIRE\"\r\n                    value={state.FIRE}\r\n                    checked={state.FIRE}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"Fire\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"MSPR\"\r\n                    value={state.MSPR}\r\n                    checked={state.MSPR}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"MSPR\"\r\n              />\r\n              <FormControlLabel\r\n                disabled={!addNew}\r\n                control={\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    name=\"CGL\"\r\n                    value={state.CGL}\r\n                    checked={state.CGL}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                }\r\n                label=\"CGL\"\r\n              />\r\n            </FormGroup>\r\n          </fieldset>\r\n          <button\r\n            ref={submitButton}\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n        </form>\r\n      )}\r\n\r\n      <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\r\n        <DataGridTable\r\n          mutipleSelect={exportMode}\r\n          isLoading={loadingAddNew || isLoading || loadingSearch}\r\n          dataKey={\"entry\"}\r\n          queryKey={[queryKey]}\r\n          columns={poliyAccountColumn}\r\n          onSelectionChange={(rowSelectionModel, data) => {\r\n            if (rowSelectionModel.length <= 0) {\r\n              setNewStateValue(dispatch, initialState);\r\n              setSearchParams((prev) => {\r\n                prev.set(\"selected\", \"\");\r\n                return prev;\r\n              });\r\n              setHasSelected(false);\r\n              setAddNew(false);\r\n              setSave(false);\r\n              setDeleting(false);\r\n              return;\r\n            }\r\n            setSave(true);\r\n\r\n            setDeleting(true);\r\n            setAddNew(true);\r\n            setHasSelected(true);\r\n            const selectedIDs = new Set(rowSelectionModel);\r\n            const selectedRowData = data.filter((row: any) =>\r\n              selectedIDs.has(row.Account.toString())\r\n            );\r\n\r\n            setSearchParams((prev) => {\r\n              prev.set(\"selected\", rowSelectionModel[0] as string);\r\n              return prev;\r\n            });\r\n\r\n            setNewStateValue(dispatch, selectedRowData[0]);\r\n          }}\r\n          getRowId={(row) => row.Account}\r\n          rows={rows}\r\n          setRows={setRows}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport function setNewStateValue(dispatch: any, obj: any) {\r\n  Object.entries(obj).forEach(([field, value]) => {\r\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\r\n  });\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["DataGridTable","_ref","onSelectionChange","_ref$initialPage","initialPage","columns","_ref$rowHeight","rowHeight","getRowId","rows","isLoading","mutipleSelect","_ref$height","height","_useUrlParams","useUrlParams","searchParams","setSearchParams","_useState","useState","_useState2","_slicedToArray","rowSelectionModel","setRowSelectionModel","_useState3","_useState4","doubleClick","setDoubleClick","_React$useState","React","pageSize","parseInt","get","page","_React$useState2","paginationModel","setPaginationModel","useEffect","updateColumns","map","column","field","_objectSpread","colSpan","align","_jsx","Box","sx","width","overflowX","position","children","DataGrid","slots","loadingOverlay","LinearProgress","loading","id","_jsxs","style","display","onClick","checkboxSelection","disableRowSelectionOnClick","initialState","pagination","pageSizeOptions","onRowDoubleClick","params","d","data","length","onRowSelectionModelChange","selection","selectionSet","Set","result","filter","s","has","cursor","onPaginationModelChange","model","prev","set","toString","Dropdown","setExportMode","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","undefined","event","currentTarget","variant","backgroundColor","green","Menu","onClose","MenuListProps","MenuItem","AccountCode","Account","Description","COM","TPL","MAR","FIRE","G02","G13","G16","MSPR","PA","CGL","Inactive","reducer","state","action","type","_defineProperty","value","poliyAccountColumn","headerName","flex","queryKey","PolicyAccount","_queryFn","_mutationFn","_handleSubmit","_useReducer","useReducer","_useReducer2","dispatch","_useContext","useContext","AuthContext","myAxios","user","exportMode","loadingSearch","setLoadingSearch","_useState5","_useState6","save","setSave","_useState7","_useState8","addNew","setAddNew","_useState9","_useState10","deleting","setDeleting","_useState11","_useState12","setRows","submitButton","useRef","_useState13","_useState14","hasSelected","setHasSelected","queryClient","useQueryClient","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","concat","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","policy","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","mode","post","success","invalidateQueries","Swal","icon","title","message","showConfirmButton","timer","mutate","loadingAddNew","selectedParams","selectedIDs","selectedRowData","row","setNewStateValue","handleInputChange","e","_e$target","target","name","handleCheckboxChange","_e$target2","JSON","parse","handleInputChangeThrottled","throttle","newInputValue","then","console","log","Typography","marginBottom","theme","alignItems","columnGap","breakpoints","down","flexDirection","marginTop","TextField","label","fullWidth","size","onChange","color","m","exportFunction","startIcon","AddIcon","_document$getElementB","document","getElementById","click","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","wait","_submitButton$current","current","disabled","SaveIcon","CircularProgress","top","left","marginLeft","CloseIcon","_document$getElementB2","pink","DeleteIcon","onSubmit","_x2","_callee3","_context3","preventDefault","rowGap","minWidth","required","border","FormGroup","justifyContent","FormControlLabel","control","Checkbox","checked","ref","dataKey","obj","Object","entries","forEach","_ref3","_ref4","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","overridesResolver","props","styles","ownerState","root","_extends","flexWrap","inProps","useThemeProps","className","_props$row","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","error","classes","composeClasses","useUtilityClasses","clsx","A100","A200","A400","A700"],"sourceRoot":""}