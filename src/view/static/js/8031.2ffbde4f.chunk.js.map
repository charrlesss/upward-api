{"version":3,"file":"static/js/8031.2ffbde4f.chunk.js","mappings":"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","sources":["components/DataGridTable.tsx","components/ModalWithTable.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/MSPR/MSPRPolicy.tsx","feautures/Admin/Task/Production/Policies/component/BreadCrumbs.tsx","lib/localStorage.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, LinearProgress } from \"@mui/material\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridRowSelectionModel,\r\n  GridRowIdGetter,\r\n} from \"@mui/x-data-grid\";\r\nimport useUrlParams from \"../hooks/useUrlParams\";\r\n\r\ninterface DataGridTableParams {\r\n  onSelectionChange: (rowSelected: GridRowSelectionModel, data: any) => void;\r\n  columns: GridColDef[];\r\n  initialPage?: number;\r\n  rowHeight?: number;\r\n  queryKey: Array<string>;\r\n  dataKey?: string;\r\n  getRowId: GridRowIdGetter<any> | undefined;\r\n  rows: GridRowSelectionModel;\r\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\r\n  isLoading: boolean;\r\n  mutipleSelect: boolean;\r\n  height?: string;\r\n}\r\n\r\nexport default function DataGridTable({\r\n  onSelectionChange,\r\n  initialPage = 10,\r\n  columns,\r\n  rowHeight = 35,\r\n  getRowId,\r\n  rows,\r\n  isLoading,\r\n  mutipleSelect,\r\n  height = \"500px\",\r\n}: DataGridTableParams) {\r\n  const { searchParams, setSearchParams } = useUrlParams();\r\n  const [rowSelectionModel, setRowSelectionModel] =\r\n    useState<GridRowSelectionModel>([]);\r\n  const [doubleClick, setDoubleClick] = useState(false);\r\n  const [paginationModel, setPaginationModel] = React.useState({\r\n    pageSize: parseInt(searchParams.get(\"pageSize\") as string) || 100,\r\n    page: parseInt(searchParams.get(\"page\") as string) || 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setRowSelectionModel(\r\n      (searchParams.get(\"selected\") as string) === \"\"\r\n        ? []\r\n        : [searchParams.get(\"selected\") as string]\r\n    );\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    onSelectionChange(rowSelectionModel, rows);\r\n  }, [doubleClick]);\r\n\r\n  if (isLoading) {\r\n    const updateColumns: any = columns.map((column) => {\r\n      if (column.field === \"id\") {\r\n        column = { ...column, colSpan: 4, align: \"center\" };\r\n      }\r\n      return column;\r\n    });\r\n    return (\r\n      <Box\r\n        sx={{\r\n          height: 500,\r\n          width: \"100%\",\r\n          overflowX: \"scroll\",\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <DataGrid\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rows={[{ id: \"Loading...\" }]}\r\n          columns={updateColumns}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: height,\r\n        width: \"100%\",\r\n        overflowX: \"scroll\",\r\n        position: \"absolute\",\r\n      }}\r\n    >\r\n      <button\r\n        id=\"reset-data-grid-selection\"\r\n        style={{ display: \"none\" }}\r\n        onClick={() => {\r\n          setRowSelectionModel([]);\r\n        }}\r\n      >\r\n        reset\r\n      </button>\r\n      {mutipleSelect ? (\r\n        <DataGrid\r\n          checkboxSelection\r\n          disableRowSelectionOnClick\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rowHeight={rowHeight}\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: initialPage },\r\n            },\r\n          }}\r\n          pageSizeOptions={[initialPage, 25, 50, 100]}\r\n          getRowId={getRowId}\r\n        />\r\n      ) : (\r\n        <DataGrid\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rowHeight={rowHeight}\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: initialPage },\r\n            },\r\n          }}\r\n          checkboxSelection\r\n          pageSizeOptions={[initialPage, 25, 50, 100]}\r\n          onRowDoubleClick={(params) => {\r\n            setDoubleClick((d) => !d);\r\n            setRowSelectionModel((data) => {\r\n              if (data.length > 0 && data[0] === params.id) {\r\n                return [];\r\n              }\r\n              return [params.id];\r\n            });\r\n          }}\r\n          onRowSelectionModelChange={(selection) => {\r\n            if (selection.length > 1) {\r\n              const selectionSet = new Set(rowSelectionModel);\r\n              const result = selection.filter((s) => !selectionSet.has(s));\r\n              onSelectionChange(result, rows);\r\n              setRowSelectionModel(result);\r\n            } else {\r\n              onSelectionChange(selection, rows);\r\n              setRowSelectionModel(selection);\r\n            }\r\n          }}\r\n          disableRowSelectionOnClick\r\n          rowSelectionModel={rowSelectionModel}\r\n          sx={{\r\n            \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer\":\r\n              {\r\n                display: \"none\",\r\n              },\r\n            \"& .MuiDataGrid-row\": {\r\n              cursor: \"pointer\",\r\n            },\r\n          }}\r\n          getRowId={getRowId}\r\n          paginationModel={paginationModel}\r\n          onPaginationModelChange={(model) => {\r\n            setPaginationModel(model);\r\n            setSearchParams((prev) => {\r\n              prev.set(\"page\", model.page.toString());\r\n              prev.set(\"pageSize\", model.pageSize.toString());\r\n              return prev;\r\n            });\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DataGridTable from \"./DataGridTable\";\r\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\r\nimport { Modal, Box, Typography,IconButton ,TextField } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\ninterface ModalWithTableParams {\r\n  height: number;\r\n  isLoading: boolean;\r\n  queryKey: string;\r\n  columns: Array<any>;\r\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\r\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\r\n  rows: GridRowSelectionModel;\r\n  id: string;\r\n  onCloseModal: () => void;\r\n  onClickCloseIcon: () => void;\r\n  showModal:boolean,\r\n  searchOnChange:React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined\r\n}\r\n\r\nconst style = {\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"70%\",\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n    heigth: \"auto\",\r\n  };\r\n  \r\nexport default function ModalWithTable({\r\n  height,\r\n  isLoading,\r\n  queryKey,\r\n  columns,\r\n  onSelectionChange,\r\n  setRows,\r\n  rows,\r\n  id,\r\n  onCloseModal,\r\n  showModal,\r\n  onClickCloseIcon,\r\n  searchOnChange\r\n}: ModalWithTableParams) {\r\n  return (\r\n    <Modal\r\n      open={showModal}\r\n      onClose={onCloseModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\r\n          <IconButton\r\n            aria-label=\"search-client\"\r\n            color=\"secondary\"\r\n            onClick={onClickCloseIcon}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\r\n          Search Clients\r\n        </Typography>\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Search\"\r\n          sx={{ marginBottom: \"10px\" }}\r\n          fullWidth\r\n          onChange={searchOnChange}\r\n        />\r\n\r\n        <div style={{ position: \"relative\", height: `${height + 20}px` }}>\r\n          <DataGridTable\r\n            height={`${height}px`}\r\n            mutipleSelect={false}\r\n            isLoading={isLoading}\r\n            queryKey={[queryKey]}\r\n            columns={columns}\r\n            onSelectionChange={onSelectionChange}\r\n            getRowId={(row) => row[`${id}`].toString()}\r\n            rows={rows}\r\n            setRows={setRows}\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useContext, useReducer, useState } from \"react\";\r\nimport BreadCrumbs from \"../../component/BreadCrumbs\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Box, Button, CircularProgress } from \"@mui/material\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { AuthContext } from \"../../../../../../../components/AuthContext\";\r\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport Swal from \"sweetalert2\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\r\nimport ContentPasteSearchIcon from \"@mui/icons-material/ContentPasteSearch\";\r\nimport ModalWithTable from \"../../../../../../../components/ModalWithTable\";\r\nimport storedLocalStorage from \"../../../../../../../lib/localStorage\";\r\n\r\nconst msprPolicyComponents = [\r\n  {\r\n    link: \"/dashboard/task/production/policy/mspr\",\r\n    text: \"Policy Information\",\r\n  },\r\n  {\r\n    link: \"/dashboard/task/production/policy/mspr/policy-premium\",\r\n    text: \"Policy Premium\",\r\n  },\r\n];\r\nconst jsongStringInitialState = {\r\n  form_action: \"REG\",\r\n  form_type: \"COM\",\r\n  sub_account: \"HO\",\r\n  //insurer info\r\n  client_id: \"\",\r\n  client_name: \"\",\r\n  client_address: \"\",\r\n  //agent info\r\n  agent_id: \"\",\r\n  agent_name: \"\",\r\n  agent_com: \"0.00\",\r\n  //Vehicle policy\r\n  PolicyAccount: \"\",\r\n  PolicyNo: \"\",\r\n\r\n  //Period Insurance\r\n  DateFrom: new Date(),\r\n  DateTo: new Date(),\r\n  DateIssued: new Date(),\r\n\r\n  //\r\n  pAddress: \"\",\r\n  moneyRoutesFrom: \"\",\r\n  moneyRoutesTo: \"\",\r\n  safeDesc: \"\",\r\n  methodTrans: \"\",\r\n  //\r\n  guardsMinNum: \"0\",\r\n  messengerMaxNum: \"0\",\r\n\r\n  //\r\n  sec1: \"0.00\",\r\n  sec2: \"0.00\",\r\n  sec3: \"0.00\",\r\n  //\r\n  prem1: \"0.00\",\r\n  prem2: \"0.00\",\r\n  prem3: \"0.00\",\r\n\r\n  //calculation\r\n  netPremium: \"0.00\",\r\n  vat: \"0.00\",\r\n  docStamp: \"0.00\",\r\n  localGovTaxPercent: \"0.75\",\r\n  localGovTax: \"0.00\",\r\n  totalDue: \"0.00\",\r\n  // extra\r\n  msprActioMode: \"\",\r\n};\r\n\r\nconst storagePolicy_ = \"MSPRPolicyInitialState\";\r\nconst reducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FIELD\":\r\n      const newState = {\r\n        ...state,\r\n        [action.field]: action.value,\r\n      };\r\n      localStorage.setItem(storagePolicy_, JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const MSPRContext = createContext<any>({});\r\n\r\nconst initialState = storedLocalStorage(\r\n  jsongStringInitialState,\r\n  storagePolicy_\r\n);\r\n\r\nconst queryKeySearchPolicy = \"mspr-search\";\r\nconst queryKeySearchClientEntry = \"clients\";\r\nconst queryKeySearchAgentEntry = \"agents\";\r\nconst queryKeyNeedData = \"mspr-policy\";\r\nconst queryKeyAddOrUpdatePolicy = \"mspr-policy\";\r\nconst queryKeyDeletePolicy = \"mspr-policy\";\r\n\r\nexport const vpolicyColumn = [\r\n  { field: \"DateIssued\", headerName: \"Date\", width: 200 },\r\n  { field: \"PolicyNo\", headerName: \"Policy No\", width: 250 },\r\n  {\r\n    field: \"Account\",\r\n    headerName: \"Account\",\r\n    width: 170,\r\n  },\r\n  {\r\n    field: \"client_fullname\",\r\n    headerName: \"Full Name\",\r\n    flex: 1,\r\n  },\r\n];\r\n\r\nconst vpolicyKey = \"vehicle-policy\";\r\n\r\nexport default function MSPRPolicy() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  const [clientRows, setClientRows] = useState<GridRowSelectionModel>([]);\r\n  const [agentRows, setAgentRows] = useState<GridRowSelectionModel>([]);\r\n  const [search, setSearch] = useState<GridRowSelectionModel>([]);\r\n  const [searchShow, setSearchShow] = useState(false);\r\n  const [loadSearchingChange, setLoadSearchingChange] = useState(false);\r\n  const [Mortgagee, setMortgagee] = useState(false);\r\n\r\n  const [showField, setShowField] = useState({\r\n    thirdparty: state.form_type.toLowerCase() === \"tpl\",\r\n    compre: state.form_type.toLowerCase() === \"com\",\r\n  });\r\n\r\n  const queryClient = useQueryClient();\r\n  const isAddOrEditMode = state.msprActioMode === \"\";\r\n\r\n  const { isLoading: searchLoading } = useQuery({\r\n    queryKey: queryKeySearchPolicy,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-mspr-policy?searchMsprPolicy=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setSearch(response.msprPolicy);\r\n    },\r\n  });\r\n\r\n  const { isLoading: clientLoading } = useQuery({\r\n    queryKey: queryKeySearchClientEntry,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-client-fire-policy?searchClient=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setClientRows(response.clients);\r\n    },\r\n  });\r\n\r\n  const { isLoading: agentLoading } = useQuery({\r\n    queryKey: queryKeySearchAgentEntry,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-agent-fire-policy?searchAgent=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setAgentRows(response.agents);\r\n    },\r\n  });\r\n\r\n  const { data, isLoading } = useQuery({\r\n    queryKey: queryKeyNeedData,\r\n    queryFn: async () =>\r\n      await myAxios.get(`/task/production/get-mspr-policy`, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }),\r\n    onSuccess: (res) => {\r\n      console.log(res);\r\n    },\r\n  });\r\n\r\n  const { mutate, isLoading: loadingAddNew } = useMutation({\r\n    mutationKey: queryKeyAddOrUpdatePolicy,\r\n    mutationFn: async (variables: any) => {\r\n      if (state.msprActioMode === \"delete\") {\r\n        return await myAxios.post(\r\n          \"/task/production/update-mspr-policy\",\r\n          variables,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      }\r\n\r\n      return await myAxios.post(\"/task/production/add-mspr-policy\", variables, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      });\r\n    },\r\n    onSuccess: async (res) => {\r\n      if (res.data.success) {\r\n        await updateQueryByKey();\r\n        return Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => {\r\n          if (state.msprActioMode !== \"delete\") {\r\n            backToDefaultState(jsongStringInitialState, true);\r\n          }\r\n        });\r\n      }\r\n\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: res.data.message,\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    },\r\n  });\r\n\r\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\r\n    mutationKey: queryKeyDeletePolicy,\r\n    mutationFn: async (variables: any) => {\r\n      return await myAxios.post(\r\n        \"/task/production/delete-mspr-policy\",\r\n        variables,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    onSuccess: async (res) => {\r\n      if (res.data.success) {\r\n        await updateQueryByKey();\r\n        return Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => {\r\n          backToDefaultState(jsongStringInitialState, true);\r\n        });\r\n      }\r\n\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: res.data.message,\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n\r\n  const customInputchange = (value: any, name: string) => {\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n\r\n  function handleOnSave() {\r\n    if (state.client_id === \"\" || state.client_id === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Invalid IDNo.\",\r\n        \"you missed the Client Id Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    if (state.PolicyAccount === \"\" || state.PolicyAccount === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Please select Account.\",\r\n        \"you missed the Account Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    if (state.PolicyNo === \"\" || state.PolicyNo === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Invalid Policy No.\",\r\n        \"you missed the Policy No Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, Save it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        console.log(state);\r\n        mutate(state);\r\n      }\r\n    });\r\n  }\r\n\r\n  function computation() {\r\n    const inpLocalGovTaxPercent = parseFloat(state.localGovTaxPercent);\r\n    const prem1 = parseFloat(state.prem1);\r\n    const prem2 = parseFloat(state.prem2);\r\n    const prem3 = parseFloat(state.prem3);\r\n    const VatPercentage = 12 / 100;\r\n    const DocPercentage = 12.5 / 100;\r\n    const LOGPercentage = inpLocalGovTaxPercent / 100;\r\n    const NewTotalPremium = prem1 + prem2 + prem3;\r\n\r\n    customInputchange((VatPercentage * NewTotalPremium).toFixed(2), \"vat\");\r\n    customInputchange((DocPercentage * NewTotalPremium).toFixed(2), \"docStamp\");\r\n    customInputchange(\r\n      (LOGPercentage * NewTotalPremium).toFixed(2),\r\n      \"localGovTax\"\r\n    );\r\n\r\n    customInputchange(NewTotalPremium.toFixed(2), \"netPremium\");\r\n    customInputchange(prem1.toFixed(2), \"prim1\");\r\n    customInputchange(prem2.toFixed(2), \"prim2\");\r\n    customInputchange(prem3.toFixed(2), \"prim3\");\r\n\r\n    customInputchange(\r\n      (\r\n        parseFloat(NewTotalPremium.toFixed(2)) +\r\n        parseFloat((VatPercentage * NewTotalPremium).toFixed(2)) +\r\n        parseFloat((DocPercentage * NewTotalPremium).toFixed(2)) +\r\n        parseFloat((LOGPercentage * NewTotalPremium).toFixed(2))\r\n      ).toFixed(2),\r\n      \"totalDue\"\r\n    );\r\n  }\r\n\r\n  function backToDefaultState(json: any, resetAll: boolean = false) {\r\n    json.form_type = state.form_type;\r\n    json.form_action = state.form_action;\r\n    json.prem_text_one = state.prem_text_one;\r\n    json.prem_text_two = state.prem_text_two;\r\n    if (!resetAll) {\r\n      json.msprActioMode = state.msprActioMode;\r\n    }\r\n    Object.entries(json).forEach(([key, value]) => {\r\n      customInputchange(value, key);\r\n    });\r\n  }\r\n\r\n  async function updateQueryByKey() {\r\n    return Promise.all([\r\n      queryClient.invalidateQueries(queryKeySearchPolicy),\r\n      queryClient.invalidateQueries(queryKeySearchClientEntry),\r\n      queryClient.invalidateQueries(queryKeySearchAgentEntry),\r\n      queryClient.invalidateQueries(queryKeyNeedData),\r\n      queryClient.invalidateQueries(queryKeyAddOrUpdatePolicy),\r\n      queryClient.invalidateQueries(queryKeyDeletePolicy),\r\n    ]);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <h1>Loading....</h1>;\r\n  }\r\n\r\n  return (\r\n    <MSPRContext.Provider\r\n      value={{\r\n        clientLoading,\r\n        agentLoading,\r\n        state,\r\n        handleInputChange,\r\n        customInputchange,\r\n        Mortgagee,\r\n        setMortgagee,\r\n        showField,\r\n        setShowField,\r\n        isLoading,\r\n        clientRows,\r\n        setClientRows,\r\n        myAxios,\r\n        user,\r\n        agentRows,\r\n        setAgentRows,\r\n        data,\r\n        computation,\r\n        isAddOrEditMode,\r\n      }}\r\n    >\r\n      <BreadCrumbs list={msprPolicyComponents} />\r\n      <Box\r\n        sx={(theme) => ({\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          columnGap: \"20px\",\r\n          marginBottom: \"10px\",\r\n          [theme.breakpoints.down(\"sm\")]: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n            flex: 1,\r\n          },\r\n        })}\r\n      >\r\n        <div\r\n          style={{\r\n            marginTop: \"10px\",\r\n            marginBottom: \"12px\",\r\n            flex: 1,\r\n            width: \"100%\",\r\n          }}\r\n        ></div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            columnGap: \"20px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              columnGap: \"5px\",\r\n            }}\r\n          >\r\n            {state.msprActioMode === \"\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={() => {\r\n                  customInputchange(\"add\", \"msprActioMode\");\r\n                }}\r\n              >\r\n                New\r\n              </Button>\r\n            )}\r\n\r\n            <Box sx={{ position: \"relative\" }}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                onClick={handleOnSave}\r\n                disabled={loadingAddNew || state.msprActioMode === \"\"}\r\n                startIcon={<SaveIcon />}\r\n              >\r\n                Save\r\n              </Button>\r\n\r\n              {loadingAddNew && state.msprActioMode === 'add' && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  sx={{\r\n                    color: green[500],\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    marginTop: \"-12px\",\r\n                    marginLeft: \"-12px\",\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n            {state.msprActioMode !== \"\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<CloseIcon />}\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  Swal.fire({\r\n                    title: \"Are you sure?\",\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"Yes, cancel it!\",\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      customInputchange(\"\", \"msprActioMode\");\r\n                      backToDefaultState(jsongStringInitialState, true);\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            )}\r\n            <Box sx={{ position: \"relative\" }}>\r\n              <Button\r\n                id=\"save-entry-header\"\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: pink[500],\r\n                  \"&:hover\": {\r\n                    backgroundColor: pink[600],\r\n                  },\r\n                }}\r\n                disabled={state.msprActioMode !== \"delete\"}\r\n                startIcon={<DeleteIcon />}\r\n                onClick={() => {\r\n                  Swal.fire({\r\n                    title: \"Are you sure?\",\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"Yes, delete it!\",\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      mutateDelete({\r\n                        PolicyAccount: state.PolicyAccount,\r\n                        PolicyNo: state.PolicyNo,\r\n                        policyType: state.policyType,\r\n                      });\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              {loadingDelete && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  sx={{\r\n                    color: green[500],\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    marginTop: \"-12px\",\r\n                    marginLeft: \"-12px\",\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n          </div>\r\n        </div>\r\n      </Box>\r\n      <div style={{ marginBottom: \"5px\", display: \"flex\", gap: \"10px\" }}>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          startIcon={<ContentPasteSearchIcon />}\r\n          onClick={() => {\r\n            if (state.msprActioMode === \"\" || state.msprActioMode === null) {\r\n              return setSearchShow(true);\r\n            }\r\n            Swal.fire({\r\n              title: \"Are you sure?\",\r\n              text: \"Your in Add mode, If you proceed the data you input will replace existing data. Are you sure you want to continue\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"Yes\",\r\n              cancelButtonText: \"No\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                customInputchange(\"\", \"msprActioMode\");\r\n                backToDefaultState(jsongStringInitialState, true);\r\n                setSearchShow(true);\r\n              }\r\n            });\r\n          }}\r\n          disabled={searchLoading || loadSearchingChange}\r\n        >\r\n          Search Policy\r\n        </Button>\r\n        <FormControl\r\n          size=\"small\"\r\n          sx={(theme) => ({\r\n            width: \"150px\",\r\n          })}\r\n        >\r\n          <InputLabel id=\"subAccount\">Sub Account</InputLabel>\r\n          <Select\r\n            size=\"small\"\r\n            labelId=\"subAccount\"\r\n            label=\"subAccount\"\r\n            name=\"sub_account\"\r\n            value={state.sub_account}\r\n            onChange={(e) => {\r\n              handleInputChange(e);\r\n            }}\r\n          >\r\n            {(data?.data?.msprPolicy.sub_account).map(\r\n              (items: any, idx: number) => {\r\n                return (\r\n                  <MenuItem key={idx} value={items.Acronym.trim()}>\r\n                    {items.Acronym}\r\n                  </MenuItem>\r\n                );\r\n              }\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Outlet />\r\n      <ModalWithTable\r\n        showModal={searchShow}\r\n        onCloseModal={() => {\r\n          setSearchShow(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setSearchShow(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          setLoadSearchingChange(true);\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-mspr-policy?searchMsprPolicy=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setSearch(res?.data.msprPolicy);\r\n              setLoadSearchingChange(false);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={searchLoading || loadSearchingChange}\r\n        queryKey={vpolicyKey}\r\n        columns={vpolicyColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.PolicyNo.toString());\r\n          });\r\n\r\n          if (selectedRowData.length <= 0) return;\r\n          const {\r\n            PolicyNo,\r\n            Account,\r\n            PeriodFrom,\r\n            PeriodTo,\r\n            Location,\r\n            Saferoom,\r\n            OriginPoint,\r\n            DestinationPoint,\r\n            Method,\r\n            Guard,\r\n            Messenger,\r\n            SecI,\r\n            SecIPremium,\r\n            SecIB,\r\n            SecIPremiumB,\r\n            SecII,\r\n            SecIIPremium,\r\n            IDNo,\r\n            SubAcct,\r\n            DateIssued,\r\n            AgentID,\r\n            AgentCom,\r\n            client_fullname,\r\n            agent_fullname,\r\n            address,\r\n          } = selectedRowData[0];\r\n          customInputchange(SubAcct, \"sub_account\");\r\n          customInputchange(IDNo, \"client_id\");\r\n          customInputchange(client_fullname, \"client_name\");\r\n          customInputchange(address, \"client_address\");\r\n\r\n          customInputchange(AgentID, \"agent_id\");\r\n          customInputchange(agent_fullname, \"agent_name\");\r\n          customInputchange(AgentCom, \"agent_com\");\r\n\r\n          customInputchange(Account, \"PolicyAccount\");\r\n          customInputchange(PolicyNo, \"PolicyNo\");\r\n\r\n          customInputchange(PeriodFrom, \"DateFrom\");\r\n          customInputchange(PeriodTo, \"DateTo\");\r\n          customInputchange(DateIssued, \"DateIssued\");\r\n\r\n\r\n          customInputchange(Location, \"pAddress\");\r\n          customInputchange(OriginPoint, \"moneyRoutesFrom\");\r\n          customInputchange(DestinationPoint, \"moneyRoutesTo\");\r\n          customInputchange(Saferoom, \"safeDesc\");\r\n          customInputchange(Method, \"methodTrans\");\r\n\r\n          customInputchange(`${Guard}`, \"guardsMinNum\");\r\n          customInputchange(`${Messenger}`, \"messengerMaxNum\");\r\n\r\n          customInputchange(SecI, \"sec1\");\r\n          customInputchange(SecIB, \"sec2\");\r\n          customInputchange(SecII, \"sec3\");\r\n\r\n          state.prem1 = SecIPremium\r\n          state.prem2 = SecIPremiumB\r\n          state.prem3 = SecIIPremium\r\n          computation();\r\n\r\n          customInputchange(\"delete\", \"msprActioMode\");\r\n          setSearchShow(false);\r\n        }}\r\n        id=\"PolicyNo\"\r\n        rows={search}\r\n        setRows={setSearch}\r\n      />\r\n    </MSPRContext.Provider>\r\n  );\r\n}\r\n","import { Breadcrumbs } from \"@mui/material\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport useUrlParams from \"../../../../../../hooks/useUrlParams\";\r\n\r\nexport default function BreadCrumbs({ list }: { list: Array<any> }) {\r\n  const location = useLocation();\r\n  const { searchParams } = useUrlParams();\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <div role=\"presentation\" onClick={handleClick}>\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {list.map((item, idx) => {\r\n          return (\r\n            <Link\r\n              key={idx}\r\n              to={\r\n                item.link +\r\n                `?drawer=${searchParams.get(\r\n                  \"drawer\"\r\n                )}&pageSize=${searchParams.get(\"pageSize\")}`\r\n              }\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: item.link === location.pathname ? \"#f97316\" : \"black\",\r\n              }}\r\n            >\r\n              {item.text}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n","export default function storedLocalStorage(obj: any, storageName: string) {\r\n  const initialStateJSON = JSON.stringify(obj);\r\n  const storedInitialStateJSON = localStorage.getItem(storageName);\r\n\r\n  const initialStateStored = storedInitialStateJSON\r\n    ? storedInitialStateJSON\r\n    : initialStateJSON;\r\n  localStorage.setItem(storageName, initialStateStored);\r\n\r\n  const listStorageName = [\r\n    \"VPolicyInitialState\",\r\n    \"BPolicyInitialState\",\r\n    \"FPolicyInitialState\",\r\n    \"MPolicyInitialState\",\r\n    \"MSPRPolicyInitialState\",\r\n    \"PAPolicyInitialState\",\r\n    \"CGLPolicyInitialState\",\r\n  ];\r\n  listStorageName.forEach((names: string) => {\r\n    if (names !== storageName) {\r\n      localStorage.removeItem(names);\r\n    }\r\n  });\r\n\r\n  return (localStorage.getItem(storageName) as string)\r\n    ? JSON.parse(localStorage.getItem(storageName) as string)\r\n    : obj;\r\n}\r\n"],"names":["DataGridTable","_ref","onSelectionChange","_ref$initialPage","initialPage","columns","_ref$rowHeight","rowHeight","getRowId","rows","isLoading","mutipleSelect","_ref$height","height","_useUrlParams","useUrlParams","searchParams","setSearchParams","_useState","useState","_useState2","_slicedToArray","rowSelectionModel","setRowSelectionModel","_useState3","_useState4","doubleClick","setDoubleClick","_React$useState","React","pageSize","parseInt","get","page","_React$useState2","paginationModel","setPaginationModel","useEffect","updateColumns","map","column","field","_objectSpread","colSpan","align","_jsx","Box","sx","width","overflowX","position","children","DataGrid","slots","loadingOverlay","LinearProgress","loading","id","_jsxs","style","display","onClick","checkboxSelection","disableRowSelectionOnClick","initialState","pagination","pageSizeOptions","onRowDoubleClick","params","d","data","length","onRowSelectionModelChange","selection","selectionSet","Set","result","filter","s","has","cursor","onPaginationModelChange","model","prev","set","toString","top","left","transform","bgcolor","boxShadow","p","heigth","ModalWithTable","queryKey","setRows","onCloseModal","showModal","onClickCloseIcon","searchOnChange","Modal","open","onClose","right","IconButton","color","CloseIcon","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","concat","row","msprPolicyComponents","link","text","jsongStringInitialState","form_action","form_type","sub_account","client_id","client_name","client_address","agent_id","agent_name","agent_com","PolicyAccount","PolicyNo","DateFrom","Date","DateTo","DateIssued","pAddress","moneyRoutesFrom","moneyRoutesTo","safeDesc","methodTrans","guardsMinNum","messengerMaxNum","sec1","sec2","sec3","prem1","prem2","prem3","netPremium","vat","docStamp","localGovTaxPercent","localGovTax","totalDue","msprActioMode","storagePolicy_","reducer","state","action","type","newState","_defineProperty","value","localStorage","setItem","JSON","stringify","MSPRContext","createContext","storedLocalStorage","queryKeySearchPolicy","queryKeySearchClientEntry","queryKeySearchAgentEntry","queryKeyNeedData","queryKeyAddOrUpdatePolicy","queryKeyDeletePolicy","vpolicyColumn","headerName","flex","vpolicyKey","MSPRPolicy","_queryFn","_queryFn2","_queryFn3","_queryFn4","_mutationFn","_onSuccess","_mutationFn2","_onSuccess2","_updateQueryByKey","_data$data","_useReducer","useReducer","_useReducer2","dispatch","_useContext","useContext","AuthContext","myAxios","user","clientRows","setClientRows","agentRows","setAgentRows","_useState5","_useState6","search","setSearch","_useState7","_useState8","searchShow","setSearchShow","_useState9","_useState10","loadSearchingChange","setLoadSearchingChange","_useState11","_useState12","Mortgagee","setMortgagee","_useState13","thirdparty","toLowerCase","compre","_useState14","showField","setShowField","queryClient","useQueryClient","isAddOrEditMode","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","response","msprPolicy","searchLoading","_useQuery2","_callee2","_context2","clients","clientLoading","_useQuery3","_callee3","_context3","agents","agentLoading","_useQuery4","_callee4","_context4","console","log","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee5","variables","_context5","post","_x2","_callee6","_context6","success","updateQueryByKey","Swal","icon","title","message","showConfirmButton","timer","then","backToDefaultState","mutate","loadingAddNew","_useMutation2","_x3","_callee7","_context7","_x4","_callee8","_context8","mutateDelete","loadingDelete","handleInputChange","e","_e$target","target","name","customInputchange","computation","inpLocalGovTaxPercent","parseFloat","LOGPercentage","NewTotalPremium","toFixed","json","resetAll","undefined","prem_text_one","prem_text_two","Object","entries","forEach","_ref2","key","_callee9","_context9","Promise","all","invalidateQueries","Provider","BreadCrumbs","list","theme","alignItems","columnGap","breakpoints","down","flexDirection","marginTop","Button","startIcon","AddIcon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","disabled","SaveIcon","CircularProgress","green","marginLeft","backgroundColor","pink","DeleteIcon","policyType","gap","ContentPasteSearchIcon","cancelButtonText","FormControl","InputLabel","Select","labelId","items","idx","MenuItem","Acronym","trim","Outlet","alert","selectedIDs","selectedRowData","_selectedRowData$","Account","PeriodFrom","PeriodTo","Location","Saferoom","OriginPoint","DestinationPoint","Method","Guard","Messenger","SecI","SecIPremium","SecIB","SecIPremiumB","SecII","SecIIPremium","IDNo","SubAcct","AgentID","AgentCom","client_fullname","agent_fullname","address","location","useLocation","role","event","preventDefault","Breadcrumbs","separator","NavigateNextIcon","fontSize","item","Link","to","textDecoration","pathname","obj","storageName","initialStateJSON","storedInitialStateJSON","getItem","initialStateStored","names","removeItem","parse"],"sourceRoot":""}