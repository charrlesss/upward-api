{"version":3,"file":"static/js/7519.e294269d.chunk.js","mappings":"+OAKe,SAASA,IACtB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAW,KACZD,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACC,GAAI,CAAEC,GAAI,MACnBJ,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEC,QAAS,IAAKP,UAC1BC,EAAAA,EAAAA,KAACO,EAAAA,GAAM,QAIf,CAEA,IAAMC,EAAY,CAChB,mBAAoB,CAClBC,cAAe,SAIbC,EAAQ,CACZ,CACEC,MAAO,iBACPC,KAAM,sCAER,CACED,MAAO,cACPC,KAAM,0CAER,CACED,MAAO,gBACPC,KAAM,4CAER,CACED,MAAO,eACPC,KAAM,2CAER,CACED,MAAO,cACPC,KAAM,0CAER,CACED,MAAO,YACPC,KAAM,wCAER,CACED,MAAO,aACPC,KAAM,0CAIV,SAASX,IACP,IAAQY,GAAiBC,EAAAA,EAAAA,KAAjBD,aACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,SAASC,EAAYC,GACnBH,EACEG,EAAEC,OAAOC,GAAE,WAAAC,OACEV,EAAaW,IAAI,UAAS,cAAAD,OAAaV,EAAaW,IAC7D,aAGR,CAEA,OACExB,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CACFtB,GAAI,SAACuB,GAAK,OAAAC,EAAAA,EAAAA,GAAA,CACRC,QAAS,OACTC,UAAW,OACVH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BC,SAAU,OACVC,MAAO,OACPC,IAAK,MACLC,aAAc,QACf,EACApC,SAEFW,EAAM0B,KAAI,SAACC,EAAMC,GAChB,IAAIC,GAAW,EA8Bf,OA5BEA,EADgB,uCAAdF,EAAKzB,KACI,CACT,qCACA,2DACA,iEACA4B,MAAK,SAACC,GAAC,OAAKA,IAAM1B,EAAS2B,QAAQ,IAChB,2CAAdL,EAAKzB,KACD,CACT,yCACD,yDACC4B,MAAK,SAACC,GAAC,OAAKA,IAAM1B,EAAS2B,QAAQ,IAChB,6CAAdL,EAAKzB,KACD,CACT,2CACD,2DACC4B,MAAK,SAACC,GAAC,OAAKA,IAAM1B,EAAS2B,QAAQ,IAChB,4CAAdL,EAAKzB,KACD,CACT,0CACD,0DACC4B,MAAK,SAACC,GAAC,OAAKA,IAAM1B,EAAS2B,QAAQ,IACf,2CAAdL,EAAKzB,KACF,CACT,yCACD,yDACC4B,MAAK,SAACC,GAAC,OAAKA,IAAM1B,EAAS2B,QAAQ,IAE1BL,EAAKzB,OAASG,EAAS2B,UAGlC1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAI,CAEHxC,IAAEyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACGpC,GAAS,IACZqC,gBAAiBN,EAAWO,EAAAA,EAAK,KAAO,GACxCrC,cAAe8B,EAAW,OAAS,GACnCQ,MAAOR,EAAW,QAAU,KAE9BS,QAAQ,WACR1B,GAAIe,EAAKzB,KACTqC,QAAS9B,EACTR,MAAO0B,EAAK1B,OAVP2B,EAaX,KAGN,C","sources":["feautures/Admin/Task/Production/Policies/Policy.tsx"],"sourcesContent":["import { Box, Chip, Divider } from \"@mui/material\";\r\nimport { blue } from \"@mui/material/colors\";\r\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\r\nimport useUrlParams from \"../../../../../hooks/useUrlParams\";\r\n\r\nexport default function Policy() {\r\n  return (\r\n    <div>\r\n      <ChipsButton />\r\n      <Divider sx={{ mt: 2 }} />\r\n      <div style={{ padding: 10 }}>\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst chipStyle = {\r\n  \"& .MuiChip-label\": {\r\n    pointerEvents: \"none\",\r\n  },\r\n};\r\n\r\nconst chips = [\r\n  {\r\n    label: \"Vehicle Policy\",\r\n    link: \"/dashboard/task/production/policy/\",\r\n  },\r\n  {\r\n    label: \"Fire Policy\",\r\n    link: \"/dashboard/task/production/policy/fire\",\r\n  },\r\n  {\r\n    label: \"Marine Policy\",\r\n    link: \"/dashboard/task/production/policy/marine\",\r\n  },\r\n  {\r\n    label: \"Bonds Policy\",\r\n    link: \"/dashboard/task/production/policy/bonds\",\r\n  },\r\n  {\r\n    label: \"MSPR Policy\",\r\n    link: \"/dashboard/task/production/policy/mspr\",\r\n  },\r\n  {\r\n    label: \"PA Policy\",\r\n    link: \"/dashboard/task/production/policy/pa\",\r\n  },\r\n  {\r\n    label: \"CGL Policy\",\r\n    link: \"/dashboard/task/production/policy/cgl\",\r\n  },\r\n];\r\n\r\nfunction ChipsButton() {\r\n  const { searchParams } = useUrlParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  function handleClick(e: any) {\r\n    navigate(\r\n      e.target.id +\r\n        `?drawer=${searchParams.get(\"drawer\")}&pageSize=${searchParams.get(\r\n          \"pageSize\"\r\n        )}`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={(theme) => ({\r\n        display: \"flex\",\r\n        columnGap: \"5px\",\r\n        [theme.breakpoints.down(\"md\")]: {\r\n          flexWrap: \"wrap\",\r\n          width: \"100%\",\r\n          gap: \"5px\",\r\n          marginBottom: \"10px\",\r\n        },\r\n      })}\r\n    >\r\n      {chips.map((item, idx) => {\r\n        let selected = false;\r\n        if (item.link === \"/dashboard/task/production/policy/\") {\r\n          selected = [\r\n            \"/dashboard/task/production/policy/\",\r\n            \"/dashboard/task/production/policy/vehicle/policy-premium\",\r\n            \"/dashboard/task/production/policy/vehicle/policy-type-details\",\r\n          ].some((d) => d === location.pathname);\r\n        }else if(item.link === \"/dashboard/task/production/policy/fire\"){\r\n          selected = [\r\n            \"/dashboard/task/production/policy/fire\", \r\n           \"/dashboard/task/production/policy/fire/policy-premium\"\r\n          ].some((d) => d === location.pathname);\r\n        }else if(item.link === \"/dashboard/task/production/policy/marine\"){\r\n          selected = [\r\n            \"/dashboard/task/production/policy/marine\", \r\n           \"/dashboard/task/production/policy/marine/policy-premium\"\r\n          ].some((d) => d === location.pathname);\r\n        }else if(item.link === \"/dashboard/task/production/policy/bonds\"){\r\n          selected = [\r\n            \"/dashboard/task/production/policy/bonds\", \r\n           \"/dashboard/task/production/policy/bonds/policy-premium\"\r\n          ].some((d) => d === location.pathname);\r\n        } else if(item.link === \"/dashboard/task/production/policy/mspr\"){\r\n          selected = [\r\n            \"/dashboard/task/production/policy/mspr\", \r\n           \"/dashboard/task/production/policy/mspr/policy-premium\"\r\n          ].some((d) => d === location.pathname);\r\n        }   else {\r\n          selected = item.link === location.pathname;\r\n        }\r\n        return (\r\n          <Chip\r\n            key={idx}\r\n            sx={{\r\n              ...chipStyle,\r\n              backgroundColor: selected ? blue[500] : \"\",\r\n              pointerEvents: selected ? \"none\" : \"\",\r\n              color: selected ? \"white\" : \"\",\r\n            }}\r\n            variant=\"outlined\"\r\n            id={item.link}\r\n            onClick={handleClick}\r\n            label={item.label}\r\n          />\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["Policy","_jsxs","children","_jsx","ChipsButton","Divider","sx","mt","style","padding","Outlet","chipStyle","pointerEvents","chips","label","link","searchParams","useUrlParams","location","useLocation","navigate","useNavigate","handleClick","e","target","id","concat","get","Box","theme","_defineProperty","display","columnGap","breakpoints","down","flexWrap","width","gap","marginBottom","map","item","idx","selected","some","d","pathname","Chip","_objectSpread","backgroundColor","blue","color","variant","onClick"],"sourceRoot":""}