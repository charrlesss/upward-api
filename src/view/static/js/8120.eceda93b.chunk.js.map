{"version":3,"file":"static/js/8120.eceda93b.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/TimePicker.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Bonds/BondsPolicyComponents/BondsPolicyInformation.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nexport default function CustomDatePicker({\r\n  label,\r\n  name,\r\n  onChange,\r\n  value,\r\n  ...rest\r\n}: any) {\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        value={value}\r\n        onChange={onChange}\r\n        slotProps={{\r\n          textField: {\r\n            size: \"small\",\r\n            label,\r\n            name,\r\n          },\r\n        }}\r\n        {...rest}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { TimePicker } from \"@mui/x-date-pickers\";\r\n\r\nexport default function CustomTimePicker({\r\n  label,\r\n  name,\r\n  onChange,\r\n  value,\r\n  ...rest\r\n}: any) {\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <TimePicker\r\n        value={value}\r\n        onChange={onChange}\r\n        slotProps={{\r\n          textField: {\r\n            size: \"small\",\r\n            label,\r\n            name,\r\n          },\r\n        }}\r\n        {...rest}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}","import { useContext, useState } from \"react\";\r\nimport { BondContext } from \"../BondsPolicy\";\r\nimport {\r\n  IconButton,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\r\nimport CustomDatePicker from \"../../../../../../../../components/DatePicker\";\r\nimport ModalWithTable from \"../../../../../../../../components/ModalWithTable\";\r\nimport CustomTimePicker from \"../../../../../../../../components/TimePicker\";\r\n\r\nexport const clientColumn = [\r\n  { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\r\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\r\n  {\r\n    field: \"entry_type\",\r\n    headerName: \"ID Type\",\r\n    width: 150,\r\n  },\r\n];\r\n\r\nexport const agentColumn = [\r\n  { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\r\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\r\n  {\r\n    field: \"entry_type\",\r\n    headerName: \"ID Type\",\r\n    width: 150,\r\n  },\r\n];\r\n\r\nconst queryKeyClient = \"vehicle-policy\";\r\nconst queryKeyAgent = \"agent-policy\";\r\n\r\nexport default function BondsPolicyInformation() {\r\n  const {\r\n    state,\r\n    handleInputChange,\r\n    isLoading,\r\n    clientRows,\r\n    setClientRows,\r\n    customInputchange,\r\n    myAxios,\r\n    user,\r\n    agentRows,\r\n    setAgentRows,\r\n    data,\r\n    isAddOrEditMode,\r\n    clientLoading,\r\n    agentLoading,\r\n  } = useContext(BondContext);\r\n\r\n  const [openClientTableModal, setOpenClientTableModal] = useState(false);\r\n  const [openAgentTableModal, setOpenAgentTableModal] = useState(false);\r\n\r\n  function accountList(data: any, policyType: string) {\r\n    if (policyType === \"G02\") {\r\n      return data.G02;\r\n    } else if (policyType === \"G13\") {\r\n      return data.G13;\r\n    } else if (policyType === \"G16\") {\r\n      return data.G16;\r\n    } else {\r\n      return data.G13;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gap: \"20px\",\r\n          gridTemplateAreas: `\"content1 content2\" \"content3 content4\" \"content5 content5\"`,\r\n        }}\r\n      >\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content1\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Insurer Information</legend>\r\n\r\n          <div style={{ display: \"flex\", columnGap: \"10px\" }}>\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Client ID\"\r\n              name=\"client_id\"\r\n              value={state.client_id}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <IconButton\r\n              disabled={isAddOrEditMode || clientLoading}\r\n              aria-label=\"search-client\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpenClientTableModal(true)}\r\n            >\r\n              <PersonSearchIcon />\r\n            </IconButton>\r\n          </div>\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Client Name\"\r\n            name=\"client_name\"\r\n            value={state.client_name}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Client Address\"\r\n            rows={3}\r\n            multiline\r\n            name=\"client_address\"\r\n            value={state.client_address}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content2\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Agent Information</legend>\r\n\r\n          <div style={{ display: \"flex\", columnGap: \"10px\" }}>\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Agent ID\"\r\n              name=\"agent_id\"\r\n              value={state.agent_id}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <IconButton\r\n              disabled={isAddOrEditMode || agentLoading}\r\n              aria-label=\"search-client\"\r\n              color=\"secondary\"\r\n              onClick={() => setOpenAgentTableModal(true)}\r\n            >\r\n              <PersonSearchIcon />\r\n            </IconButton>\r\n          </div>\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Agent Name\"\r\n            name=\"agent_name\"\r\n            value={state.agent_name}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Commission\"\r\n            name=\"agent_com\"\r\n            value={state.agent_com}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n        <div>\r\n          <fieldset\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: \"10px\",\r\n              padding: \"15px\",\r\n              border: \"1px solid #cbd5e1\",\r\n              borderRadius: \"5px\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <legend style={{ color: \"#065f46\" }}>Bonds Policy</legend>\r\n            <FormControl size=\"small\" fullWidth disabled={isAddOrEditMode}>\r\n              <InputLabel id=\"PolicyAccount\">Account</InputLabel>\r\n              <Select\r\n                labelId=\"PolicyAccount\"\r\n                value={state.PolicyAccount}\r\n                label=\"Account\"\r\n                name=\"PolicyAccount\"\r\n                onChange={handleInputChange}\r\n              >\r\n                {[\r\n                  { Account: \"\" },\r\n                  ...accountList(\r\n                    data?.data.bondsPolicy.policy_account,\r\n                    state.policyType\r\n                  ),\r\n                ].map((items: any, idx: number) => {\r\n                  return (\r\n                    <MenuItem key={idx} value={items.Account}>\r\n                      {items.Account}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Policy No\"\r\n              name=\"PolicyNo\"\r\n              value={state.PolicyNo}\r\n              onChange={handleInputChange}\r\n            />\r\n            <FormControl size=\"small\" fullWidth disabled={isAddOrEditMode}>\r\n              <InputLabel id=\"policyType\">Policy Type</InputLabel>\r\n              <Select\r\n                labelId=\"policyType\"\r\n                value={state.policyType}\r\n                label=\"policyType\"\r\n                name=\"policyType\"\r\n                onChange={(e) => {\r\n                  accountList(\r\n                    data?.data.bondsPolicy.policy_account,\r\n                    e.target.value\r\n                  );\r\n                  handleInputChange(e);\r\n                }}\r\n              >\r\n                {[\r\n                  { SublineName: \"\" },\r\n                  ...data.data.bondsPolicy.policy_type,\r\n                ].map((items: any, idx: number) => {\r\n                  return (\r\n                    <MenuItem key={idx} value={items.SublineName}>\r\n                      {items.SublineName}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </fieldset>\r\n          <fieldset\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: \"10px\",\r\n              padding: \"15px\",\r\n              border: \"1px solid #cbd5e1\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          >\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Officer\"\r\n              name=\"officer\"\r\n              value={state.officer}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              disabled={isAddOrEditMode}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Position\"\r\n              name=\"position\"\r\n              value={state.position}\r\n              onChange={handleInputChange}\r\n            />\r\n          </fieldset>\r\n        </div>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            gridArea: \"content4\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <legend style={{ color: \"#065f46\" }}>Period of Insurance</legend>\r\n          <CustomDatePicker\r\n            disabled={isAddOrEditMode}\r\n            label=\"Bidding Date\"\r\n            onChange={(e: any) => {\r\n              customInputchange(e, \"biddingDate\");\r\n            }}\r\n            value={new Date(state.biddingDate)}\r\n          />\r\n          <CustomTimePicker\r\n            disabled={isAddOrEditMode}\r\n            label=\"Time\"\r\n            onChange={(e: any) => {\r\n              customInputchange(e, \"time\");\r\n            }}\r\n            value={new Date(state.time)}\r\n          />\r\n          <CustomDatePicker\r\n            label=\"Date Issued\"\r\n            name=\"DateIssued\"\r\n            onChange={(e: any) => {\r\n              customInputchange(e, \"DateIssued\");\r\n            }}\r\n            value={new Date(state.DateIssued)}\r\n            disabled={isAddOrEditMode}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Validity\"\r\n            name=\"validity\"\r\n            value={state.validity}\r\n            onChange={handleInputChange}\r\n            rows={3}\r\n            multiline\r\n          />\r\n        </fieldset>\r\n        <fieldset\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n            gridArea: \"content5\",\r\n            padding: \"15px\",\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Unit\"\r\n            name=\"unit\"\r\n            value={state.unit}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={4}\r\n          />\r\n          <TextField\r\n            disabled={isAddOrEditMode}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Obligee\"\r\n            name=\"obligee\"\r\n            value={state.obligee}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={4}\r\n          />\r\n        </fieldset>\r\n      </div>\r\n      <ModalWithTable\r\n        showModal={openClientTableModal}\r\n        onCloseModal={() => {\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-client-vehicle-policy?clientSearch=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setClientRows(res?.data.vehiclePolicy?.clients);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={isLoading}\r\n        queryKey={queryKeyClient}\r\n        columns={clientColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.entry_client_id.toString());\r\n          });\r\n          if (selectedRowData.length <= 0) return;\r\n          customInputchange(selectedRowData[0].entry_client_id, \"client_id\");\r\n          customInputchange(selectedRowData[0].fullname, \"client_name\");\r\n          customInputchange(selectedRowData[0].address, \"client_address\");\r\n          setOpenClientTableModal(false);\r\n        }}\r\n        id=\"entry_client_id\"\r\n        rows={clientRows}\r\n        setRows={setClientRows}\r\n      />\r\n      <ModalWithTable\r\n        showModal={openAgentTableModal}\r\n        onCloseModal={() => {\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-agent-vehicle-policy?agentSearch=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setAgentRows(res?.data.vehiclePolicy?.agents);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={isLoading}\r\n        queryKey={queryKeyAgent}\r\n        columns={agentColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.entry_agent_id.toString());\r\n          });\r\n          if (selectedRowData.length <= 0) return;\r\n          customInputchange(selectedRowData[0].entry_agent_id, \"agent_id\");\r\n          customInputchange(selectedRowData[0].fullname, \"agent_name\");\r\n          setOpenAgentTableModal(false);\r\n        }}\r\n        id=\"entry_agent_id\"\r\n        rows={agentRows}\r\n        setRows={setAgentRows}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["CustomDatePicker","_ref","label","name","onChange","value","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","slotProps","textField","size","CustomTimePicker","TimePicker","clientColumn","field","headerName","width","flex","agentColumn","queryKeyClient","queryKeyAgent","BondsPolicyInformation","_useContext","useContext","BondContext","state","handleInputChange","isLoading","clientRows","setClientRows","customInputchange","myAxios","user","agentRows","setAgentRows","data","isAddOrEditMode","clientLoading","agentLoading","_useState","useState","_useState2","_slicedToArray","openClientTableModal","setOpenClientTableModal","_useState3","_useState4","openAgentTableModal","setOpenAgentTableModal","accountList","policyType","G02","G13","G16","_jsxs","style","display","gap","gridTemplateAreas","flexDirection","gridArea","padding","border","borderRadius","color","columnGap","TextField","disabled","fullWidth","variant","client_id","InputProps","readOnly","IconButton","onClick","PersonSearchIcon","client_name","rows","multiline","client_address","agent_id","agent_name","agent_com","marginBottom","FormControl","InputLabel","id","Select","labelId","PolicyAccount","Account","concat","_toConsumableArray","bondsPolicy","policy_account","map","items","idx","MenuItem","PolicyNo","e","target","SublineName","policy_type","officer","position","Date","biddingDate","time","DateIssued","validity","unit","obligee","ModalWithTable","showModal","onCloseModal","onClickCloseIcon","searchOnChange","get","headers","Authorization","accessToken","then","res","_res$data$vehiclePoli","success","alert","message","vehiclePolicy","clients","height","queryKey","columns","onSelectionChange","rowSelectionModel","length","selectedIDs","Set","selectedRowData","filter","row","has","entry_client_id","toString","fullname","address","setRows","_res$data$vehiclePoli2","agents","entry_agent_id"],"sourceRoot":""}