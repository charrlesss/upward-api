{"version":3,"file":"static/js/5615.4a7db893.chunk.js","mappings":"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","sources":["components/DataGridTable.tsx","components/ModalWithTable.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Marine/MarinePolicy.tsx","feautures/Admin/Task/Production/Policies/component/BreadCrumbs.tsx","lib/localStorage.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, LinearProgress } from \"@mui/material\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridRowSelectionModel,\r\n  GridRowIdGetter,\r\n} from \"@mui/x-data-grid\";\r\nimport useUrlParams from \"../hooks/useUrlParams\";\r\n\r\ninterface DataGridTableParams {\r\n  onSelectionChange: (rowSelected: GridRowSelectionModel, data: any) => void;\r\n  columns: GridColDef[];\r\n  initialPage?: number;\r\n  rowHeight?: number;\r\n  queryKey: Array<string>;\r\n  dataKey?: string;\r\n  getRowId: GridRowIdGetter<any> | undefined;\r\n  rows: GridRowSelectionModel;\r\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\r\n  isLoading: boolean;\r\n  mutipleSelect: boolean;\r\n  height?: string;\r\n}\r\n\r\nexport default function DataGridTable({\r\n  onSelectionChange,\r\n  initialPage = 10,\r\n  columns,\r\n  rowHeight = 35,\r\n  getRowId,\r\n  rows,\r\n  isLoading,\r\n  mutipleSelect,\r\n  height = \"500px\",\r\n}: DataGridTableParams) {\r\n  const { searchParams, setSearchParams } = useUrlParams();\r\n  const [rowSelectionModel, setRowSelectionModel] =\r\n    useState<GridRowSelectionModel>([]);\r\n  const [doubleClick, setDoubleClick] = useState(false);\r\n  const [paginationModel, setPaginationModel] = React.useState({\r\n    pageSize: parseInt(searchParams.get(\"pageSize\") as string) || 100,\r\n    page: parseInt(searchParams.get(\"page\") as string) || 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setRowSelectionModel(\r\n      (searchParams.get(\"selected\") as string) === \"\"\r\n        ? []\r\n        : [searchParams.get(\"selected\") as string]\r\n    );\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    onSelectionChange(rowSelectionModel, rows);\r\n  }, [doubleClick]);\r\n\r\n  if (isLoading) {\r\n    const updateColumns: any = columns.map((column) => {\r\n      if (column.field === \"id\") {\r\n        column = { ...column, colSpan: 4, align: \"center\" };\r\n      }\r\n      return column;\r\n    });\r\n    return (\r\n      <Box\r\n        sx={{\r\n          height: 500,\r\n          width: \"100%\",\r\n          overflowX: \"scroll\",\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <DataGrid\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rows={[{ id: \"Loading...\" }]}\r\n          columns={updateColumns}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: height,\r\n        width: \"100%\",\r\n        overflowX: \"scroll\",\r\n        position: \"absolute\",\r\n      }}\r\n    >\r\n      <button\r\n        id=\"reset-data-grid-selection\"\r\n        style={{ display: \"none\" }}\r\n        onClick={() => {\r\n          setRowSelectionModel([]);\r\n        }}\r\n      >\r\n        reset\r\n      </button>\r\n      {mutipleSelect ? (\r\n        <DataGrid\r\n          checkboxSelection\r\n          disableRowSelectionOnClick\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rowHeight={rowHeight}\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: initialPage },\r\n            },\r\n          }}\r\n          pageSizeOptions={[initialPage, 25, 50, 100]}\r\n          getRowId={getRowId}\r\n        />\r\n      ) : (\r\n        <DataGrid\r\n          slots={{ loadingOverlay: LinearProgress }}\r\n          loading={isLoading}\r\n          rowHeight={rowHeight}\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: initialPage },\r\n            },\r\n          }}\r\n          checkboxSelection\r\n          pageSizeOptions={[initialPage, 25, 50, 100]}\r\n          onRowDoubleClick={(params) => {\r\n            setDoubleClick((d) => !d);\r\n            setRowSelectionModel((data) => {\r\n              if (data.length > 0 && data[0] === params.id) {\r\n                return [];\r\n              }\r\n              return [params.id];\r\n            });\r\n          }}\r\n          onRowSelectionModelChange={(selection) => {\r\n            if (selection.length > 1) {\r\n              const selectionSet = new Set(rowSelectionModel);\r\n              const result = selection.filter((s) => !selectionSet.has(s));\r\n              onSelectionChange(result, rows);\r\n              setRowSelectionModel(result);\r\n            } else {\r\n              onSelectionChange(selection, rows);\r\n              setRowSelectionModel(selection);\r\n            }\r\n          }}\r\n          disableRowSelectionOnClick\r\n          rowSelectionModel={rowSelectionModel}\r\n          sx={{\r\n            \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer\":\r\n              {\r\n                display: \"none\",\r\n              },\r\n            \"& .MuiDataGrid-row\": {\r\n              cursor: \"pointer\",\r\n            },\r\n          }}\r\n          getRowId={getRowId}\r\n          paginationModel={paginationModel}\r\n          onPaginationModelChange={(model) => {\r\n            setPaginationModel(model);\r\n            setSearchParams((prev) => {\r\n              prev.set(\"page\", model.page.toString());\r\n              prev.set(\"pageSize\", model.pageSize.toString());\r\n              return prev;\r\n            });\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DataGridTable from \"./DataGridTable\";\r\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\r\nimport { Modal, Box, Typography,IconButton ,TextField } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\ninterface ModalWithTableParams {\r\n  height: number;\r\n  isLoading: boolean;\r\n  queryKey: string;\r\n  columns: Array<any>;\r\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\r\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\r\n  rows: GridRowSelectionModel;\r\n  id: string;\r\n  onCloseModal: () => void;\r\n  onClickCloseIcon: () => void;\r\n  showModal:boolean,\r\n  searchOnChange:React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined\r\n}\r\n\r\nconst style = {\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"70%\",\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n    heigth: \"auto\",\r\n  };\r\n  \r\nexport default function ModalWithTable({\r\n  height,\r\n  isLoading,\r\n  queryKey,\r\n  columns,\r\n  onSelectionChange,\r\n  setRows,\r\n  rows,\r\n  id,\r\n  onCloseModal,\r\n  showModal,\r\n  onClickCloseIcon,\r\n  searchOnChange\r\n}: ModalWithTableParams) {\r\n  return (\r\n    <Modal\r\n      open={showModal}\r\n      onClose={onCloseModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\r\n          <IconButton\r\n            aria-label=\"search-client\"\r\n            color=\"secondary\"\r\n            onClick={onClickCloseIcon}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\r\n          Search Clients\r\n        </Typography>\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Search\"\r\n          sx={{ marginBottom: \"10px\" }}\r\n          fullWidth\r\n          onChange={searchOnChange}\r\n        />\r\n\r\n        <div style={{ position: \"relative\", height: `${height + 20}px` }}>\r\n          <DataGridTable\r\n            height={`${height}px`}\r\n            mutipleSelect={false}\r\n            isLoading={isLoading}\r\n            queryKey={[queryKey]}\r\n            columns={columns}\r\n            onSelectionChange={onSelectionChange}\r\n            getRowId={(row) => row[`${id}`].toString()}\r\n            rows={rows}\r\n            setRows={setRows}\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useContext, useReducer, useState } from \"react\";\r\nimport BreadCrumbs from \"../../component/BreadCrumbs\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Box, Button, CircularProgress } from \"@mui/material\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { AuthContext } from \"../../../../../../../components/AuthContext\";\r\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport Swal from \"sweetalert2\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\r\nimport ContentPasteSearchIcon from \"@mui/icons-material/ContentPasteSearch\";\r\nimport ModalWithTable from \"../../../../../../../components/ModalWithTable\";\r\nimport storedLocalStorage from \"../../../../../../../lib/localStorage\";\r\n\r\nconst marinePolicyComponents = [\r\n  {\r\n    link: \"/dashboard/task/production/policy/marine\",\r\n    text: \"Policy Information\",\r\n  },\r\n  {\r\n    link: \"/dashboard/task/production/policy/marine/policy-premium\",\r\n    text: \"Policy Premium\",\r\n  },\r\n];\r\n\r\nconst jsongStringInitialState = {\r\n  form_action: \"REG\",\r\n  form_type: \"COM\",\r\n  sub_account: \"HO\",\r\n  //insurer info\r\n  client_id: \"\",\r\n  client_name: \"\",\r\n  client_address: \"\",\r\n  //agent info\r\n  agent_id: \"\",\r\n  agent_name: \"\",\r\n  agent_com: \"0.00\",\r\n  //Vehicle policy\r\n  PolicyAccount: \"\",\r\n  PolicyNo: \"\",\r\n  location: \"\",\r\n  //Period Insurance\r\n  DateFrom: new Date(),\r\n  DateTo: new Date(),\r\n  DateIssued: new Date(),\r\n  //Insured Unit\r\n  consignee: \"\",\r\n  smi: \"\",\r\n  vessel: \"\",\r\n  add_info: \"\",\r\n  point_orig: \"\",\r\n  point_dis: \"\",\r\n  //policy premuim\r\n  prem_text_one: \"\",\r\n  prem_text_two: \"\",\r\n  //calculation\r\n  insuredValue: \"0.00\",\r\n  percentagePremium: \"0.00\",\r\n  totalPremium: \"0.00\",\r\n  vat: \"0.00\",\r\n  docStamp: \"0.00\",\r\n  localGovTaxPercent: \"0.75\",\r\n  localGovTax: \"0.00\",\r\n  totalDue: \"0.00\",\r\n  // extra\r\n  marineActioMode: \"\",\r\n};\r\n\r\nconst storagePolicy_ = \"MPolicyInitialState\";\r\nconst reducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FIELD\":\r\n      const newState = {\r\n        ...state,\r\n        [action.field]: action.value,\r\n      };\r\n      localStorage.setItem(storagePolicy_, JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const MarineContext = createContext<any>({});\r\n\r\nconst initialState = storedLocalStorage(\r\n  jsongStringInitialState,\r\n  storagePolicy_\r\n);\r\n\r\nconst queryKeySearchPolicy = \"marine-search\";\r\nconst queryKeySearchClientEntry = \"clients\";\r\nconst queryKeySearchAgentEntry = \"agents\";\r\nconst queryKeyNeedData = \"marine-policy\";\r\nconst queryKeyAddOrUpdatePolicy = \"marine-policy\";\r\nconst queryKeyDeletePolicy = \"marine-policy\";\r\n\r\nexport const vpolicyColumn = [\r\n  { field: \"DateIssued\", headerName: \"Date\", width: 200 },\r\n  { field: \"PolicyNo\", headerName: \"Policy No\", width: 250 },\r\n  {\r\n    field: \"Account\",\r\n    headerName: \"Account\",\r\n    width: 170,\r\n  },\r\n  {\r\n    field: \"client_fullname\",\r\n    headerName: \"Full Name\",\r\n    flex: 1,\r\n  },\r\n];\r\n\r\nconst vpolicyKey = \"vehicle-policy\";\r\n\r\nexport default function MarinePolicy() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  const [clientRows, setClientRows] = useState<GridRowSelectionModel>([]);\r\n  const [agentRows, setAgentRows] = useState<GridRowSelectionModel>([]);\r\n  const [search, setSearch] = useState<GridRowSelectionModel>([]);\r\n  const [searchShow, setSearchShow] = useState(false);\r\n  const [loadSearchingChange, setLoadSearchingChange] = useState(false);\r\n  const [Mortgagee, setMortgagee] = useState(false);\r\n  const [showField, setShowField] = useState({\r\n    thirdparty: state.form_type.toLowerCase() === \"tpl\",\r\n    compre: state.form_type.toLowerCase() === \"com\",\r\n  });\r\n  const queryClient = useQueryClient();\r\n  const isAddOrEditMode = state.marineActioMode === \"\";\r\n\r\n  const { isLoading: searchLoading } = useQuery({\r\n    queryKey: queryKeySearchPolicy,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-marine-policy?searchMarinePolicy=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setSearch(response.firePolicy);\r\n    },\r\n  });\r\n\r\n  const { isLoading: clientLoading } = useQuery({\r\n    queryKey: queryKeySearchClientEntry,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-client-fire-policy?searchClient=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setClientRows(response.clients);\r\n    },\r\n  });\r\n\r\n  const { isLoading: agentLoading } = useQuery({\r\n    queryKey: queryKeySearchAgentEntry,\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/production/search-agent-fire-policy?searchAgent=`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess: (res) => {\r\n      const response = res.data as any;\r\n      setAgentRows(response.agents);\r\n    },\r\n  });\r\n\r\n  const { data, isLoading } = useQuery({\r\n    queryKey: queryKeyNeedData,\r\n    queryFn: async () =>\r\n      await myAxios.get(`/task/production/get-marine-policy`, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }),\r\n    onSuccess: (res) => {\r\n      if (res?.data.success) {\r\n        setDefaultValueForClause(res?.data.marinePolicy.words);\r\n      }\r\n    },\r\n  });\r\n\r\n  const { mutate, isLoading: loadingAddNew } = useMutation({\r\n    mutationKey: queryKeyAddOrUpdatePolicy,\r\n    mutationFn: async (variables: any) => {\r\n      if (state.marineActioMode === \"delete\") {\r\n        return await myAxios.post(\r\n          \"/task/production/update-marine-policy\",\r\n          variables,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      }\r\n      return await myAxios.post(\r\n        \"/task/production/add-marine-policy\",\r\n        variables,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    onSuccess: async (res) => {\r\n      if (res.data.success) {\r\n        await updateQueryByKey();\r\n        return Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => {\r\n          if (state.marineActioMode !== \"delete\") {\r\n            backToDefaultState(jsongStringInitialState, true);\r\n          }\r\n        });\r\n      }\r\n\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: res.data.message,\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    },\r\n  });\r\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\r\n    mutationKey: queryKeyDeletePolicy,\r\n    mutationFn: async (variables: any) => {\r\n      return await myAxios.post(\r\n        \"/task/production/delete-marine-policy\",\r\n        variables,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    onSuccess: async (res) => {\r\n      if (res.data.success) {\r\n        await updateQueryByKey();\r\n        return Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => {\r\n          backToDefaultState(jsongStringInitialState, true);\r\n        });\r\n      }\r\n\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: res.data.message,\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    },\r\n  });\r\n  const handleInputChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n  const customInputchange = (value: any, name: string) => {\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n  function handleOnSave() {\r\n    if (state.client_id === \"\" || state.client_id === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Invalid IDNo.\",\r\n        \"you missed the Client Id Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    if (state.PolicyAccount === \"\" || state.PolicyAccount === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Please select Account.\",\r\n        \"you missed the Account Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    if (state.PolicyNo === \"\" || state.PolicyNo === null) {\r\n      return Swal.fire(\r\n        \"Unable to save! Invalid Policy No.\",\r\n        \"you missed the Policy No Field?\",\r\n        \"error\"\r\n      );\r\n    }\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, Save it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        console.log(state);\r\n        mutate(state);\r\n      }\r\n    });\r\n  }\r\n  function computation() {\r\n    const inpInsurerVal = parseFloat(state.insuredValue);\r\n    const inPercentagePremium = parseFloat(state.percentagePremium);\r\n    const inpLocalGovTaxPercent = parseFloat(state.localGovTaxPercent);\r\n\r\n    const Percentage = inPercentagePremium / 100;\r\n    const VatPercentage = 12 / 100;\r\n    const DocPercentage = 12.5 / 100;\r\n    const LOGPercentage = inpLocalGovTaxPercent / 100;\r\n    const NewTotalPremium = inpInsurerVal * Percentage;\r\n\r\n    customInputchange(inpInsurerVal.toFixed(2), \"insuredValue\");\r\n    customInputchange(inPercentagePremium.toFixed(2), \"percentagePremium\");\r\n    customInputchange(NewTotalPremium.toFixed(2), \"totalPremium\");\r\n    customInputchange((VatPercentage * NewTotalPremium).toFixed(2), \"vat\");\r\n    customInputchange((DocPercentage * NewTotalPremium).toFixed(2), \"docStamp\");\r\n    customInputchange(\r\n      (LOGPercentage * NewTotalPremium).toFixed(2),\r\n      \"localGovTax\"\r\n    );\r\n    customInputchange(\r\n      (\r\n        parseFloat(NewTotalPremium.toFixed(2)) +\r\n        parseFloat((VatPercentage * NewTotalPremium).toFixed(2)) +\r\n        parseFloat((DocPercentage * NewTotalPremium).toFixed(2)) +\r\n        parseFloat((LOGPercentage * NewTotalPremium).toFixed(2))\r\n      ).toFixed(2),\r\n      \"totalDue\"\r\n    );\r\n  }\r\n  function backToDefaultState(json: any, resetAll: boolean = false) {\r\n    json.form_type = state.form_type;\r\n    json.form_action = state.form_action;\r\n    json.prem_text_one = state.prem_text_one;\r\n    json.prem_text_two = state.prem_text_two;\r\n    if (!resetAll) {\r\n      json.marineActioMode = state.marineActioMode;\r\n    }\r\n    Object.entries(json).forEach(([key, value]) => {\r\n      customInputchange(value, key);\r\n    });\r\n  }\r\n  function setDefaultValueForClause(data: Array<any>) {\r\n    data.forEach((item: any) => {\r\n      if (item.SType === 0) {\r\n        customInputchange(item.Phrase, \"prem_text_one\");\r\n      } else {\r\n        customInputchange(item.Phrase, \"prem_text_two\");\r\n      }\r\n    });\r\n  }\r\n  async function updateQueryByKey() {\r\n    return Promise.all([\r\n      queryClient.invalidateQueries(queryKeySearchPolicy),\r\n      queryClient.invalidateQueries(queryKeySearchClientEntry),\r\n      queryClient.invalidateQueries(queryKeySearchAgentEntry),\r\n      queryClient.invalidateQueries(queryKeyNeedData),\r\n      queryClient.invalidateQueries(queryKeyAddOrUpdatePolicy),\r\n      queryClient.invalidateQueries(queryKeyDeletePolicy),\r\n    ]);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <h1>Loading....</h1>;\r\n  }\r\n  console.log(state);\r\n\r\n  return (\r\n    <MarineContext.Provider\r\n      value={{\r\n        clientLoading,\r\n        agentLoading,\r\n        state,\r\n        handleInputChange,\r\n        customInputchange,\r\n        Mortgagee,\r\n        setMortgagee,\r\n        showField,\r\n        setShowField,\r\n        isLoading,\r\n        clientRows,\r\n        setClientRows,\r\n        myAxios,\r\n        user,\r\n        agentRows,\r\n        setAgentRows,\r\n        data,\r\n        computation,\r\n        isAddOrEditMode,\r\n      }}\r\n    >\r\n      <BreadCrumbs list={marinePolicyComponents} />\r\n      <Box\r\n        sx={(theme) => ({\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          columnGap: \"20px\",\r\n          marginBottom: \"10px\",\r\n          [theme.breakpoints.down(\"sm\")]: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n            flex: 1,\r\n          },\r\n        })}\r\n      >\r\n        <div\r\n          style={{\r\n            marginTop: \"10px\",\r\n            marginBottom: \"12px\",\r\n            flex: 1,\r\n            width: \"100%\",\r\n          }}\r\n        ></div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            columnGap: \"20px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              columnGap: \"5px\",\r\n            }}\r\n          >\r\n            {state.marineActioMode === \"\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={() => {\r\n                  customInputchange(\"add\", \"marineActioMode\");\r\n                }}\r\n              >\r\n                New\r\n              </Button>\r\n            )}\r\n\r\n            <Box sx={{ position: \"relative\" }}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                onClick={handleOnSave}\r\n                disabled={loadingAddNew || state.marineActioMode === \"\"}\r\n                startIcon={<SaveIcon />}\r\n              >\r\n                Save\r\n              </Button>\r\n\r\n              {loadingAddNew && state.marineActioMode === 'add' && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  sx={{\r\n                    color: green[500],\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    marginTop: \"-12px\",\r\n                    marginLeft: \"-12px\",\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n            {state.marineActioMode !== \"\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<CloseIcon />}\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  Swal.fire({\r\n                    title: \"Are you sure?\",\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"Yes, cancel it!\",\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      customInputchange(\"\", \"marineActioMode\");\r\n                      backToDefaultState(jsongStringInitialState, true);\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            )}\r\n            <Box sx={{ position: \"relative\" }}>\r\n              <Button\r\n                id=\"save-entry-header\"\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: pink[500],\r\n                  \"&:hover\": {\r\n                    backgroundColor: pink[600],\r\n                  },\r\n                }}\r\n                disabled={state.marineActioMode !== \"delete\"}\r\n                startIcon={<DeleteIcon />}\r\n                onClick={() => {\r\n                  Swal.fire({\r\n                    title: \"Are you sure?\",\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"Yes, delete it!\",\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                      mutateDelete({\r\n                        PolicyAccount: state.PolicyAccount,\r\n                        PolicyNo: state.PolicyNo,\r\n                      });\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              {loadingDelete && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  sx={{\r\n                    color: green[500],\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    marginTop: \"-12px\",\r\n                    marginLeft: \"-12px\",\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n          </div>\r\n        </div>\r\n      </Box>\r\n      <div style={{ marginBottom: \"5px\", display: \"flex\", gap: \"10px\" }}>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          startIcon={<ContentPasteSearchIcon />}\r\n          onClick={() => {\r\n            if (\r\n              state.marineActioMode === \"\" ||\r\n              state.marineActioMode === null\r\n            ) {\r\n              return setSearchShow(true);\r\n            }\r\n            Swal.fire({\r\n              title: \"Are you sure?\",\r\n              text: \"Your in Add mode, If you proceed the data you input will replace existing data. Are you sure you want to continue\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"Yes\",\r\n              cancelButtonText: \"No\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                customInputchange(\"\", \"marineActioMode\");\r\n                backToDefaultState(jsongStringInitialState, true);\r\n                setSearchShow(true);\r\n              }\r\n            });\r\n          }}\r\n          disabled={searchLoading || loadSearchingChange}\r\n        >\r\n          Search Policy\r\n        </Button>\r\n        <FormControl\r\n          size=\"small\"\r\n          sx={(theme) => ({\r\n            width: \"150px\",\r\n          })}\r\n        >\r\n          <InputLabel id=\"subAccount\">Sub Account</InputLabel>\r\n          <Select\r\n            size=\"small\"\r\n            labelId=\"subAccount\"\r\n            label=\"subAccount\"\r\n            name=\"sub_account\"\r\n            value={state.sub_account}\r\n            onChange={(e) => {\r\n              handleInputChange(e);\r\n            }}\r\n          >\r\n            {(data?.data?.marinePolicy.sub_account).map(\r\n              (items: any, idx: number) => {\r\n                return (\r\n                  <MenuItem key={idx} value={items.Acronym.trim()}>\r\n                    {items.Acronym}\r\n                  </MenuItem>\r\n                );\r\n              }\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Outlet />\r\n\r\n      <ModalWithTable\r\n        showModal={searchShow}\r\n        onCloseModal={() => {\r\n          setSearchShow(false);\r\n        }}\r\n        onClickCloseIcon={() => {\r\n          setSearchShow(false);\r\n        }}\r\n        searchOnChange={(e) => {\r\n          setLoadSearchingChange(true);\r\n          myAxios\r\n            .get(\r\n              `/task/production/search-marine-policy?searchMarinePolicy=${e.target.value}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n              }\r\n            )\r\n            .then((res: any) => {\r\n              if (!res?.data.success) {\r\n                return alert(`Error : ${res?.data.message}`);\r\n              }\r\n              setSearch(res?.data.firePolicy);\r\n              setLoadSearchingChange(false);\r\n            });\r\n        }}\r\n        height={300}\r\n        isLoading={searchLoading || loadSearchingChange}\r\n        queryKey={vpolicyKey}\r\n        columns={vpolicyColumn}\r\n        onSelectionChange={(rowSelectionModel, data) => {\r\n          if (rowSelectionModel.length <= 0) {\r\n            return;\r\n          }\r\n          const selectedIDs = new Set(rowSelectionModel);\r\n          const selectedRowData = data.filter((row: any) => {\r\n            return selectedIDs.has(row.PolicyNo.toString());\r\n          });\r\n\r\n          if (selectedRowData.length <= 0) return;\r\n          const {\r\n            Account,\r\n            AdditionalInfo,\r\n            AgentCom,\r\n            AgentID,\r\n            Consignee,\r\n            DateFrom,\r\n            DateIssued,\r\n            DateTo,\r\n            IDNo,\r\n            InsuredValue,\r\n            Location,\r\n            Percentage,\r\n            PointOfOrigin,\r\n            PointofDestination,\r\n            PolicyNo,\r\n            SubAcct,\r\n            SubjectInsured,\r\n            Vessel,\r\n            address,\r\n            agent_fullname,\r\n            client_fullname,\r\n          } = selectedRowData[0];\r\n\r\n          customInputchange(SubAcct, \"sub_account\");\r\n          customInputchange(IDNo, \"client_id\");\r\n          customInputchange(client_fullname, \"client_name\");\r\n          customInputchange(address, \"client_address\");\r\n\r\n          customInputchange(AgentID, \"agent_id\");\r\n          customInputchange(agent_fullname, \"agent_name\");\r\n          customInputchange(AgentCom, \"agent_com\");\r\n\r\n          customInputchange(Account, \"PolicyAccount\");\r\n          customInputchange(PolicyNo, \"PolicyNo\");\r\n          customInputchange(Location, \"location\");\r\n\r\n          customInputchange(DateFrom, \"DateFrom\");\r\n          customInputchange(DateTo, \"DateTo\");\r\n          customInputchange(DateIssued, \"DateIssued\");\r\n\r\n          customInputchange(Consignee, \"consignee\");\r\n          customInputchange(SubjectInsured, \"smi\");\r\n          customInputchange(Vessel, \"vessel\");\r\n          customInputchange(AdditionalInfo, \"add_info\");\r\n          customInputchange(PointOfOrigin, \"point_orig\");\r\n          customInputchange(PointofDestination, \"point_dis\");\r\n\r\n          state.insuredValue = InsuredValue;\r\n          state.percentagePremium = Percentage;\r\n          computation();\r\n\r\n          customInputchange(\"delete\", \"marineActioMode\");\r\n          setSearchShow(false);\r\n        }}\r\n        id=\"PolicyNo\"\r\n        rows={search}\r\n        setRows={setSearch}\r\n      />\r\n    </MarineContext.Provider>\r\n  );\r\n}\r\n","import { Breadcrumbs } from \"@mui/material\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport useUrlParams from \"../../../../../../hooks/useUrlParams\";\r\n\r\nexport default function BreadCrumbs({ list }: { list: Array<any> }) {\r\n  const location = useLocation();\r\n  const { searchParams } = useUrlParams();\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <div role=\"presentation\" onClick={handleClick}>\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {list.map((item, idx) => {\r\n          return (\r\n            <Link\r\n              key={idx}\r\n              to={\r\n                item.link +\r\n                `?drawer=${searchParams.get(\r\n                  \"drawer\"\r\n                )}&pageSize=${searchParams.get(\"pageSize\")}`\r\n              }\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: item.link === location.pathname ? \"#f97316\" : \"black\",\r\n              }}\r\n            >\r\n              {item.text}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n","export default function storedLocalStorage(obj: any, storageName: string) {\r\n  const initialStateJSON = JSON.stringify(obj);\r\n  const storedInitialStateJSON = localStorage.getItem(storageName);\r\n\r\n  const initialStateStored = storedInitialStateJSON\r\n    ? storedInitialStateJSON\r\n    : initialStateJSON;\r\n  localStorage.setItem(storageName, initialStateStored);\r\n\r\n  const listStorageName = [\r\n    \"VPolicyInitialState\",\r\n    \"BPolicyInitialState\",\r\n    \"FPolicyInitialState\",\r\n    \"MPolicyInitialState\",\r\n    \"MSPRPolicyInitialState\",\r\n    \"PAPolicyInitialState\",\r\n    \"CGLPolicyInitialState\",\r\n  ];\r\n  listStorageName.forEach((names: string) => {\r\n    if (names !== storageName) {\r\n      localStorage.removeItem(names);\r\n    }\r\n  });\r\n\r\n  return (localStorage.getItem(storageName) as string)\r\n    ? JSON.parse(localStorage.getItem(storageName) as string)\r\n    : obj;\r\n}\r\n"],"names":["DataGridTable","_ref","onSelectionChange","_ref$initialPage","initialPage","columns","_ref$rowHeight","rowHeight","getRowId","rows","isLoading","mutipleSelect","_ref$height","height","_useUrlParams","useUrlParams","searchParams","setSearchParams","_useState","useState","_useState2","_slicedToArray","rowSelectionModel","setRowSelectionModel","_useState3","_useState4","doubleClick","setDoubleClick","_React$useState","React","pageSize","parseInt","get","page","_React$useState2","paginationModel","setPaginationModel","useEffect","updateColumns","map","column","field","_objectSpread","colSpan","align","_jsx","Box","sx","width","overflowX","position","children","DataGrid","slots","loadingOverlay","LinearProgress","loading","id","_jsxs","style","display","onClick","checkboxSelection","disableRowSelectionOnClick","initialState","pagination","pageSizeOptions","onRowDoubleClick","params","d","data","length","onRowSelectionModelChange","selection","selectionSet","Set","result","filter","s","has","cursor","onPaginationModelChange","model","prev","set","toString","top","left","transform","bgcolor","boxShadow","p","heigth","ModalWithTable","queryKey","setRows","onCloseModal","showModal","onClickCloseIcon","searchOnChange","Modal","open","onClose","right","IconButton","color","CloseIcon","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","concat","row","marinePolicyComponents","link","text","jsongStringInitialState","form_action","form_type","sub_account","client_id","client_name","client_address","agent_id","agent_name","agent_com","PolicyAccount","PolicyNo","location","DateFrom","Date","DateTo","DateIssued","consignee","smi","vessel","add_info","point_orig","point_dis","prem_text_one","prem_text_two","insuredValue","percentagePremium","totalPremium","vat","docStamp","localGovTaxPercent","localGovTax","totalDue","marineActioMode","storagePolicy_","reducer","state","action","type","newState","_defineProperty","value","localStorage","setItem","JSON","stringify","MarineContext","createContext","storedLocalStorage","queryKeySearchPolicy","queryKeySearchClientEntry","queryKeySearchAgentEntry","queryKeyNeedData","queryKeyAddOrUpdatePolicy","queryKeyDeletePolicy","vpolicyColumn","headerName","flex","vpolicyKey","MarinePolicy","_queryFn","_queryFn2","_queryFn3","_queryFn4","_mutationFn","_onSuccess","_mutationFn2","_onSuccess2","_updateQueryByKey","_data$data","_useReducer","useReducer","_useReducer2","dispatch","_useContext","useContext","AuthContext","myAxios","user","clientRows","setClientRows","agentRows","setAgentRows","_useState5","_useState6","search","setSearch","_useState7","_useState8","searchShow","setSearchShow","_useState9","_useState10","loadSearchingChange","setLoadSearchingChange","_useState11","_useState12","Mortgagee","setMortgagee","_useState13","thirdparty","toLowerCase","compre","_useState14","showField","setShowField","queryClient","useQueryClient","isAddOrEditMode","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","response","firePolicy","searchLoading","_useQuery2","_callee2","_context2","clients","clientLoading","_useQuery3","_callee3","_context3","agents","agentLoading","_useQuery4","_callee4","_context4","success","forEach","item","SType","customInputchange","Phrase","setDefaultValueForClause","marinePolicy","words","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee5","variables","_context5","post","_x2","_callee6","_context6","updateQueryByKey","Swal","icon","title","message","showConfirmButton","timer","then","backToDefaultState","mutate","loadingAddNew","_useMutation2","_x3","_callee7","_context7","_x4","_callee8","_context8","mutateDelete","loadingDelete","handleInputChange","e","_e$target","target","name","computation","inpInsurerVal","parseFloat","inPercentagePremium","LOGPercentage","NewTotalPremium","toFixed","json","resetAll","undefined","Object","entries","_ref2","key","_callee9","_context9","Promise","all","invalidateQueries","console","log","Provider","BreadCrumbs","list","theme","alignItems","columnGap","breakpoints","down","flexDirection","marginTop","Button","startIcon","AddIcon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","disabled","SaveIcon","CircularProgress","green","marginLeft","backgroundColor","pink","DeleteIcon","gap","ContentPasteSearchIcon","cancelButtonText","FormControl","InputLabel","Select","labelId","items","idx","MenuItem","Acronym","trim","Outlet","alert","selectedIDs","selectedRowData","_selectedRowData$","Account","AdditionalInfo","AgentCom","AgentID","Consignee","IDNo","InsuredValue","Location","Percentage","PointOfOrigin","PointofDestination","SubAcct","SubjectInsured","Vessel","address","agent_fullname","client_fullname","useLocation","role","event","preventDefault","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","textDecoration","pathname","obj","storageName","initialStateJSON","storedInitialStateJSON","getItem","initialStateStored","names","removeItem","parse"],"sourceRoot":""}